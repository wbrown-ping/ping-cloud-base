---

### Ping app SSH private key ###

apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: ssh-id-key-secret
data:
  id_rsa: |
    ${SSH_ID_KEY_BASE64}

---

# NewRelic license key to send APM data
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: newrelic-license-key
data:
  NEW_RELIC_LICENSE_KEY: ${NEW_RELIC_LICENSE_KEY_BASE64}

---
# NewRelic license key to send APM data
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: newrelic-license-key
  namespace: newrelic
data:
  NEW_RELIC_LICENSE_KEY: ${NEW_RELIC_LICENSE_KEY_BASE64}

---
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: nr-license-key
  namespace: elastic-stack-logging
data:
  NEW_RELIC_LICENSE_KEY: ${NEW_RELIC_LICENSE_KEY_BASE64}

# ---
# ### Optional certificate(s) to add to the PD truststore ###
# apiVersion: v1
# kind: Secret
# type: Opaque
# metadata:
#  name: pingdirectory-truststore-certs
# data:
#  cert_one: |
#    asdfasdf
#  cert_two: |
#    asdfasdf

---

### Licenses ###

# Add PingDirectory.lic (case-sensitive) to the data section with the base64-encoded value of the license file
apiVersion: v1
kind: Secret
metadata:
  name: pingdirectory-license
type: Opaque

---

# Add pingfederate.lic (case-sensitive) to the data section with the base64-encoded value of the license file
apiVersion: v1
kind: Secret
metadata:
  name: pingfederate-license
type: Opaque

---

# Add pingaccess.lic (case-sensitive) to the data section with the base64-encoded value of the license file
apiVersion: v1
kind: Secret
metadata:
  name: pingaccess-license
type: Opaque

---

# Add pingaccess.lic (case-sensitive) to the data section with the base64-encoded value of the license file
apiVersion: v1
kind: Secret
metadata:
  name: pingaccess-was-license
type: Opaque

---

### Product passwords ###

# Supported keys:
# Exported as environment variables: PF_ADMIN_USER_PASSWORD, PF_LDAP_PASSWORD, DA_OAUTH_TOKEN_VALIDATOR_SECRET, PC_ADMIN_USER_PASSWORD
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: pingcommon-passwords

---

# Supported keys:
# Mounted as files: root-user-password, admin-user-password, encryption-password, encryption-settings.pin, ads.crt, ads.key
# Exported as environment variables: P14C_ENVIRONMENT_ID, P14C_CLIENT_ID, P14C_CLIENT_SECRET
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: pingdirectory-passwords

---

# Supported keys:
# Exported as environment variables: DMANAGER_PASSWORD
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: pingdirectory-dmanager-password

---

# Supported keys:
# Mounted as file: root-user-password
# Exported as environment variable: ROOT_USER_PASSWORD, EXT_PD_SYNC_BIND_DN_PASSWORD, EXT_PD_ADMIN_BIND_DN_PASSWORD
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: pingdatasync-passwords

---

# Supported keys:
# Exported as environment variables: PA_ADMIN_USER_PASSWORD, OLD_PA_ADMIN_USER_PASSWORD
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: pingaccess-passwords

---

# Supported keys:
# Exported as environment variables: PA_ADMIN_USER_PASSWORD, OLD_PA_ADMIN_USER_PASSWORD,
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: pingaccess-was-passwords

---

# Supported keys:
# Exported as environment variables: PF_CLUSTER_AUTH_PASSWORD
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: pingfederate-cluster-auth-password

---

# Supported keys:
# Exported as environment variables: HEALTHCHECK_USER_NAME, HEALTHCHECK_USER_PASSWORD
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: healthcheck-user
  namespace: health

---

# Slack token to send argo events notification
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: slack-secret
  namespace: argo-events
data:
  token: ${ARGOCD_SLACK_TOKEN_BASE64}

---
# OpsGenie API Key to send alerts from Prometheus
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: opsgenie-key
  namespace: prometheus
data:
  api-key: ${OPSGENIE_API_KEY_BASE64}
---
# NOTE: This file must always end with `---` so that argo secrets can be appended correctly for dev cluster deployments