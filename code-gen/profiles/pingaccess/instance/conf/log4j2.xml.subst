<?xml version="1.0" encoding="UTF-8"?>

<!-- ===================================================================== -->
<!--                                                                       -->
<!--  Log4J2 Configuration                                                 -->
<!--                                                                       -->
<!-- ===================================================================== -->

<!--
   | For more configuration information and examples see the Apache Log4j2
   | website: http://logging.apache.org/log4j/2.x/
 -->

<!--
   | monitorInterval - the number of seconds before Log4J2 detects changes to the configuration file and reconfigures itself.
 -->
<Configuration monitorInterval="30" shutdownHook="enable" packages="com.pingidentity.pa.cli.logging.appenders.log4j2,com.pingidentity.pa.cli.logging.layouts.log4j2,com.pingidentity.pa.cli.logging.filters.log4j2">
    <Loggers>
        <!-- PingAccess Loggers-->
        <AsyncLogger name="com.pingidentity" level="INFO" additivity="false" includeLocation="false">
            <AppenderRef ref="File"/>
            <!--<AppenderRef ref="CONSOLE-SIEM"/>-->
            <!--<AppenderRef ref="CONSOLE" />-->
            <!--<AppenderRef ref="SYSLOG" />-->
        </AsyncLogger>

        <!-- Logs details/ordering of resources -->
        <AsyncLogger name="com.pingidentity.pa.core.proxies.ProxyInfoLogger" level="INFO"/>

        <!-- Logs configuration replication details -->
        <AsyncLogger name="com.pingidentity.pa.polling.replication" level="INFO"/>

        <!-- Logs details related to loading the administrative configuration from disk into the runtime -->
        <AsyncLogger name="com.pingidentity.pa.config.DefaultConfigurationManager" level="INFO"/>

        <!--
        Log entries can be generated from Groovy rules. All Groovy rules use a logger with a name like:

            GroovyRule.[RULE_NAME]

        where RULE_NAME is replaced with the name of the rule.

        To enable DEBUG logging from all Groovy rules, uncomment the following line.
        <AsyncLogger name="GroovyRule" level="DEBUG"/>

        To enable INFO logging from a specific Groovy rule with the name "example", uncomment the following line:
        <AsyncLogger name="GroovyRule.[example]" level="INFO"/>
        -->

        <!-- Log incoming and outgoing cookies-->
        <!--
        <AsyncLogger name="com.pingidentity.pa.core.interceptor.CookieLoggingInterceptor" level="TRACE" additivity="false" includeLocation="false">
            <AppenderRef ref="File"/>
        </AsyncLogger>
        -->

        <!-- ========================= -->
        <!-- Third-party dependencies  -->
        <!-- ========================= -->

        <!-- Changes to this section will not be required to effectively troubleshoot PingAccess -->
        <AsyncLogger name="com.netflix" level="WARN" additivity="false" includeLocation="false">
            <AppenderRef ref="File"/>
            <!--<AppenderRef ref="CONSOLE-SIEM"/>-->
        </AsyncLogger>
        <AsyncLogger name="com.netflix.config.sources.URLConfigurationSource" level="FATAL" additivity="false"
                     includeLocation="false">
            <AppenderRef ref="File"/>
            <!--<AppenderRef ref="CONSOLE-SIEM"/>-->
        </AsyncLogger>
        <AsyncLogger name="net.sf.ehcache" level="WARN" additivity="false" includeLocation="false">
            <AppenderRef ref="File"/>
            <!--<AppenderRef ref="CONSOLE-SIEM"/>-->
        </AsyncLogger>
        <AsyncLogger name="net.sf.ehcache.config.CacheConfiguration" level="ERROR" additivity="false"
                     includeLocation="false">
            <AppenderRef ref="File"/>
            <!--<AppenderRef ref="CONSOLE-SIEM"/>-->
        </AsyncLogger>
        <AsyncLogger name="org.springframework" level="WARN" additivity="false" includeLocation="false">
            <AppenderRef ref="File"/>
            <!--<AppenderRef ref="CONSOLE-SIEM"/>-->
        </AsyncLogger>
        <AsyncLogger name="org.springframework.orm.jpa" level="WARN" additivity="false" includeLocation="false">
            <AppenderRef ref="File"/>
            <!--<AppenderRef ref="CONSOLE-SIEM"/>-->
        </AsyncLogger>
        <AsyncLogger name="org.hibernate" level="WARN" additivity="false" includeLocation="false">
            <AppenderRef ref="File"/>
            <!--<AppenderRef ref="CONSOLE-SIEM"/>-->
        </AsyncLogger>
        <AsyncLogger name="org.hibernate.orm.deprecation" level="FATAL" additivity="false" includeLocation="false">
            <AppenderRef ref="File"/>
            <!--<AppenderRef ref="CONSOLE-SIEM"/>-->
        </AsyncLogger>
        <AsyncLogger name="org.hibernate.cache.ehcache.AbstractEhcacheRegionFactory" level="ERROR" additivity="false" includeLocation="false">
            <AppenderRef ref="File"/>
            <!--<AppenderRef ref="CONSOLE-SIEM"/>-->
        </AsyncLogger>
        <AsyncLogger name="org.hibernate.jpa.internal.util.LogHelper" level="FATAL" additivity="false"
                     includeLocation="false">
            <AppenderRef ref="File"/>
            <!--<AppenderRef ref="CONSOLE-SIEM"/>-->
        </AsyncLogger>
        <AsyncLogger name="org.apache.http" level="WARN" additivity="false" includeLocation="false">
            <AppenderRef ref="File"/>
            <!--<AppenderRef ref="CONSOLE-SIEM"/>-->
        </AsyncLogger>
        <AsyncLogger name="java.sql.DatabaseMetaData" level="WARN" additivity="false" includeLocation="false">
            <AppenderRef ref="File"/>
            <!--<AppenderRef ref="CONSOLE-SIEM"/>-->
        </AsyncLogger>
        <AsyncLogger name="com.wordnik.swagger" level="WARN" additivity="false" includeLocation="false">
            <AppenderRef ref="File"/>
            <!--<AppenderRef ref="CONSOLE-SIEM"/>-->
        </AsyncLogger>
        <AsyncLogger name="io.netty" level="WARN" additivity="false" includeLocation="false">
            <AppenderRef ref="File"/>
            <!--<AppenderRef ref="CONSOLE-SIEM"/>-->
        </AsyncLogger>
        <AsyncLogger name="org.jose4j.jwe.kdf" level="WARN" additivity="false" includeLocation="false">
            <AppenderRef ref="File"/>
            <!--<AppenderRef ref="CONSOLE-SIEM"/>-->
        </AsyncLogger>
        <AsyncLogger name="org.hibernate.validator.messageinterpolation.ParameterMessageInterpolator" level="ERROR" additivity="false" includeLocation="false">
            <AppenderRef ref="File"/>
            <!--<AppenderRef ref="CONSOLE-SIEM"/>-->
        </AsyncLogger>

        <!-- ======================= -->
        <!-- Set up the Root logger  -->
        <!-- ======================= -->
        <AsyncRoot level="INFO" includeLocation="false">
            <AppenderRef ref="File"/>
            <!--<AppenderRef ref="CONSOLE-SIEM"/>-->
        </AsyncRoot>

        <!-- ======================= -->
        <!-- Audit log configuration -->
        <!-- ======================= -->
        <Logger name="apiaudit" level="INFO" additivity="false">
            <AppenderRef ref="APIAuditLog-File"/>
            <!--<AppenderRef ref="CONSOLE_AUDIT"/>-->
            <!--<AppenderRef ref="ApiAuditLog-Database-Failover"/>-->
            <!--<AppenderRef ref="ApiAuditLog-SQLServer-Database-Failover"/>-->
            <!--<AppenderRef ref="ApiAuditLog-PostgreSQL"/>-->
            <!--<AppenderRef ref="ApiAudit2Splunk"/>-->
            <AppenderRef ref="ApiAuditLog-HarFile"/>
        </Logger>
        <Logger name="engineaudit" level="INFO" additivity="false">
            <AppenderRef ref="EngineAuditLog-File"/>
            <!--<AppenderRef ref="CONSOLE_AUDIT"/>-->
            <!--<AppenderRef ref="EngineAuditLog-Database-Failover"/>-->
            <!--<AppenderRef ref="EngineAuditLog-SQLServer-Database-Failover"/>-->
            <!--<AppenderRef ref="EngineAuditLog-PostgreSQL"/>-->
            <!--<AppenderRef ref="EngineAudit2Splunk"/>-->
            <!--<AppenderRef ref="EngineAuditLog-HarFile"/>-->
        </Logger>
        <Logger name="agentaudit" level="INFO" additivity="false">
            <AppenderRef ref="AgentAuditLog-File"/>
            <!--<AppenderRef ref="CONSOLE_AUDIT"/>-->
            <!--<AppenderRef ref="AgentAuditLog-Database-Failover"/>-->
            <!--<AppenderRef ref="AgentAuditLog-SQLServer-Database-Failover"/>-->
            <!--<AppenderRef ref="AgentAuditLog-PostgreSQL"/>-->
            <!--<AppenderRef ref="AgentAudit2Splunk"/>-->
            <!--<AppenderRef ref="AgentAuditLog-HarFile"/>-->
        </Logger>
        <Logger name="sidebandclientaudit" level="INFO" additivity="false">
            <AppenderRef ref="SidebandClientAuditLog-File"/>
            <!--<AppenderRef ref="CONSOLE_AUDIT"/>-->
            <!--<AppenderRef ref="SidebandClientAuditLog-Database-Failover"/>-->
            <!--<AppenderRef ref="SidebandClientAuditLog-SQLServer-Database-Failover"/>-->
            <!--<AppenderRef ref="SidebandClientAuditLog-PostgreSQL"/>-->
            <!--<AppenderRef ref="SidebandClientAudit2Splunk"/>-->
            <!--<AppenderRef ref="SidebandClientAuditLog-HarFile"/>-->
        </Logger>
        <Logger name="sidebandaudit" level="INFO" additivity="false">
            <AppenderRef ref="SidebandAuditLog-File"/>
            <!--<AppenderRef ref="CONSOLE_AUDIT"/>-->
            <!--<AppenderRef ref="SidebandAuditLog-Database-Failover"/>-->
            <!--<AppenderRef ref="SidebandAuditLog-SQLServer-Database-Failover"/>-->
            <!--<AppenderRef ref="SidebandAuditLog-PostgreSQL"/>-->
            <!--<AppenderRef ref="SidebandAudit2Splunk"/>-->
            <!--<AppenderRef ref="SidebandAuditLog-HarFile"/>-->
        </Logger>
    </Loggers>

    <Appenders>
        <!-- ============================== -->
        <!-- Append messages to the console -->
        <!-- ============================== -->
        <!-- To use, uncomment the next block and the appenderRef under the AsyncRoot element, in the 'Loggers' section -->

        <Console name="CONSOLE" target="SYSTEM_OUT">
            <PatternLayout pattern="%d{ABSOLUTE} %-5p [%c{1}] %m{nolookups}%n" />
        </Console>


        <Console name="CONSOLE-SIEM" target="SYSTEM_OUT">
            <PingSyslogLayout>
                <JSONLayout complete="true" compact="true" eventEol="true" objectMessageAsJsonObject="true" properties="true">
                    <KeyValuePair key="logPurpose" value="System_SIEM" />
                </JSONLayout>
            </PingSyslogLayout>
        </Console>

        <Console name="CONSOLE_AUDIT" target="SYSTEM_OUT">
            <PingSyslogLayout>
              <JSONLayout complete="true" compact="true" eventEol="true" objectMessageAsJsonObject="true" >
                <KeyValuePair key="date" value="$${date:yyyy-MM-dd'T'HH:mm:ssZ}"/>
                <KeyValuePair key="exchangeId" value="$${ctx:exchangeId:-}"/>
                <KeyValuePair key="trackingId" value="$${ctx:AUDIT.trackingId:-}"/>
                <KeyValuePair key="roundTripMS" value="$${ctx:AUDIT.roundTripMS:-}"/>
                <KeyValuePair key="subject" value="$${ctx:AUDIT.subject:-}"/>
                <KeyValuePair key="authMech" value="$${ctx:AUDIT.authMech:-}"/>
                <KeyValuePair key="client" value="$${ctx:AUDIT.client:-}"/>
                <KeyValuePair key="method" value="$${ctx:AUDIT.method:-}"/>
                <KeyValuePair key="resource" value="$${ctx:AUDIT.resource:-}"/>
                <KeyValuePair key="requestUri" value="$${ctx:AUDIT.requestUri:-}"/>
                <KeyValuePair key="responseCode" value="$${ctx:AUDIT.responseCode:-}"/>
                <KeyValuePair key="sidebandName" value="$${ctx:AUDIT.sidebandName:-}"/>
                <KeyValuePair key="sidebandDecision" value="$${ctx:AUDIT.sidebandDecision:-}"/>
                <KeyValuePair key="logPurpose" value="Audit_SIEM" />
              </JSONLayout>
            </PingSyslogLayout>
        </Console>

        <!-- ========================= -->
        <!-- Append messages to syslog -->
        <!-- ========================= -->
        <!-- To use, uncomment the next block and the appenderRef under the AsyncRoot element, in the 'Loggers' section -->

        <!--
        <Socket name="SYSLOG" host="localhost" port="514" protocol="UDP">
            <PingSyslogLayout facility="LOCAL0">
                <PatternLayout>
                    <pattern>%d{ABSOLUTE} %5p %c:%L - %m%n</pattern>
                </PatternLayout>
            </PingSyslogLayout>
        </Socket>
        -->

        <!-- ================================= -->
        <!-- Preserve messages in a local file -->
        <!-- ================================= -->

        <!-- Main log : A size based file rolling appender -->
        <RollingFile name="File"
                     fileName="${sys:pa.home}/log/pingaccess.log"
                     filePattern="${sys:pa.home}/log/pingaccess.log.%i"
                     ignoreExceptions="false">
            <PatternLayout>
                <!-- Uncomment this if you want to use UTF-8 encoding instead of system's default encoding. -->
                <!--
                <charset>UTF-8</charset>
                -->
                <pattern>%d{ISO8601} %5p [%X{exchangeId}] %c - %m{nolookups}%n</pattern>
            </PatternLayout>
            <Policies>
                <SizeBasedTriggeringPolicy size="100 MB" />
            </Policies>
            <DefaultRolloverStrategy max="4" />
        </RollingFile>

        <!-- API auditing file logging configuration-->
        <RollingFile name="APIAuditLog-File"
                     fileName="${sys:pa.home}/log/pingaccess_api_audit.log"
                     filePattern="${sys:pa.home}/log/pingaccess_api_audit.log.%i"
                     ignoreExceptions="false">
            <PatternLayout>
                <!-- Uncomment this if you want to use UTF-8 encoding instead of system's default encoding. -->
                <!--
                <charset>UTF-8</charset>
                -->
                <pattern>%d{ISO8601}| %X{exchangeId}| %X{AUDIT.trackingId}| %X{AUDIT.roundTripMS} ms| %X{AUDIT.subject}| %X{AUDIT.authMech}| %X{AUDIT.client}| %X{AUDIT.method}| %X{AUDIT.requestUri}| %X{AUDIT.responseCode} %n</pattern>
            </PatternLayout>
            <Policies>
                <SizeBasedTriggeringPolicy size="100 MB" />
            </Policies>
            <DefaultRolloverStrategy max="4" />
        </RollingFile>

        <!-- API Audit log : JDBC appender template for Oracle

        To enable:
          1) Uncomment the PingAccessJDBC, RollingFile and PingAccessFailover elements below
          2) Uncomment the reference to 'ApiAuditLog-Database-Failover' for the 'apiaudit' Logger (in the 'Loggers' section)
          3) Ensure that the 'log4j2.db.properties' file is populated with valid values
          4) Ensure that the Oracle JDBC driver JAR file is in the /lib directory

        Note:
          In PingAccessFailover, the 'retryIntervalSeconds' attribute may be added to specify the number of seconds that must
          pass before retrying the primary JDBC appender.
        -->
        <!--
        <PingAccessJDBC name="ApiAuditLog-Database" tableName="api_audit_log" ignoreExceptions="false" bufferSize="256">
            <ConnectionFactory class="com.pingidentity.pa.cli.logging.database.Log4j2OracleConnectionFactory" method="getAPIAuditConnection" />
            <Column name="D_TIME" isEventTimestamp="true"/>
            <Column name="EXCHANGE_ID" pattern="%X{exchangeId}" />
            <Column name="TRACKING_ID" pattern="%X{AUDIT.trackingId}" />
            <Column name="SUBJECT" pattern="%X{AUDIT.subject}" />
            <Column name="AUTH_MECH" pattern="%X{AUDIT.authMech}" />
            <Column name="CLIENT" pattern="%X{AUDIT.client}" />
            <Column name="METHOD" pattern="%X{AUDIT.method}" />
            <Column name="REQUEST_URI" pattern="%X{AUDIT.requestUri}" isClob="true"/>
            <Column name="RESPONSE_CODE" pattern="%X{AUDIT.responseCode}" />
        </PingAccessJDBC>
        <RollingFile name="ApiAuditLog-Database-Failover-File"
                     fileName="${sys:pa.home}/log/pingaccess_api_audit_oracle_failover.log"
                     filePattern="${sys:pa.home}/log/pingaccess_api_audit_oracle_failover.%d{yyyy-MM-dd}.log"
                     ignoreExceptions="false">
            <PatternLayout>
                <pattern>%d{ISO8601}| %X{exchangeId}| %X{AUDIT.trackingId}| %X{AUDIT.subject}| %X{AUDIT.authMech}| %X{AUDIT.client}| %X{AUDIT.method}| %X{AUDIT.requestUri}| %X{AUDIT.responseCode} %n</pattern>
            </PatternLayout>
            <Policies>
                <TimeBasedTriggeringPolicy />
            </Policies>
        </RollingFile>
        <PingAccessFailover name="ApiAuditLog-Database-Failover" primary="ApiAuditLog-Database" error="File">
            <Failovers>
                <AppenderRef ref="ApiAuditLog-Database-Failover-File"/>
            </Failovers>
        </PingAccessFailover>
        -->

        <!-- API Audit log : JDBC appender template for Microsoft SQL Server

        To enable:
          1) Uncomment the PingAccessJDBC, RollingFile and PingAccessFailover elements below
          2) Uncomment the reference to 'ApiAuditLog-SQLServer-Database-Failover' for the 'apiaudit' Logger (in the 'Loggers' section)
          3) Ensure that the 'log4j2.db.properties' file is populated with valid values
          4) Ensure that the SQL Server JDBC driver JAR file is in the /lib directory

        Note:
          In PingAccessFailover, the 'retryIntervalSeconds' attribute may be added to specify the number of seconds that must
          pass before retrying the primary JDBC appender.
        -->
        <!--
        <PingAccessJDBC name="ApiAuditLog-SQLServer-Database" tableName="api_audit_log" ignoreExceptions="false" bufferSize="256">
            <ConnectionFactory class="com.pingidentity.pa.cli.logging.database.Log4j2SqlServerConnectionFactory" method="getAPIAuditConnection" />
            <Column name="D_TIME" isEventTimestamp="true"/>
            <Column name="EXCHANGE_ID" pattern="%X{exchangeId}" />
            <Column name="TRACKING_ID" pattern="%X{AUDIT.trackingId}" />
            <Column name="SUBJECT" pattern="%X{AUDIT.subject}" />
            <Column name="AUTH_MECH" pattern="%X{AUDIT.authMech}" />
            <Column name="CLIENT" pattern="%X{AUDIT.client}" />
            <Column name="METHOD" pattern="%X{AUDIT.method}" />
            <Column name="REQUEST_URI" pattern="%X{AUDIT.requestUri}"/>
            <Column name="RESPONSE_CODE" pattern="%X{AUDIT.responseCode}" />
        </PingAccessJDBC>
        <RollingFile name="ApiAuditLog-SQLServer-Database-Failover-File"
                     fileName="${sys:pa.home}/log/pingaccess_api_audit_sqlserver_failover.log"
                     filePattern="${sys:pa.home}/log/pingaccess_api_audit_sqlserver_failover.%d{yyyy-MM-dd}.log"
                     ignoreExceptions="false">
            <PatternLayout>
                <pattern>%d{ISO8601}| %X{exchangeId}| %X{AUDIT.trackingId}| %X{AUDIT.subject}| %X{AUDIT.authMech}| %X{AUDIT.client}| %X{AUDIT.method}| %X{AUDIT.requestUri}| %X{AUDIT.responseCode} %n</pattern>
            </PatternLayout>
            <Policies>
                <TimeBasedTriggeringPolicy />
            </Policies>
        </RollingFile>
        <PingAccessFailover name="ApiAuditLog-SQLServer-Database-Failover" primary="ApiAuditLog-SQLServer-Database" error="File">
            <Failovers>
                <AppenderRef ref="ApiAuditLog-SQLServer-Database-Failover-File"/>
            </Failovers>
        </PingAccessFailover>
        -->

        <!-- API Audit log : JDBC appender template for PostgreSQL

        To enable:
          1) Uncomment the PingAccessJDBC, RollingFile and PingAccessFailover elements below
          2) Uncomment the reference to 'ApiAuditLog-PostgreSQL' for the 'apiaudit' Logger (in the 'Loggers' section)
          3) Ensure that the 'log4j2.db.properties' file is populated with valid values
          4) Ensure that the PostgreSQL JDBC driver JAR file is in the /lib directory

        Note:
          In PingAccessFailover, the 'retryIntervalSeconds' attribute may be added to specify the number of seconds that must
          pass before retrying the primary JDBC appender.
        -->
        <!--
        <PingAccessJDBC name="ApiAuditLog-PostgreSQL-Database" tableName="api_audit_log" ignoreExceptions="false" bufferSize="256">
            <ConnectionFactory class="com.pingidentity.pa.cli.logging.database.Log4j2PostgreSQLConnectionFactory" method="getAPIAuditConnection"/>
            <Column name="D_TIME" isEventTimestamp="true"/>
            <ColumnMapping name="EXCHANGE_ID" pattern="%X{exchangeId}"/>
            <ColumnMapping name="TRACKING_ID" pattern="%X{AUDIT.trackingId}"/>
            <ColumnMapping name="SUBJECT" pattern="%X{AUDIT.subject}"/>
            <ColumnMapping name="AUTH_MECH" pattern="%X{AUDIT.authMech}"/>
            <ColumnMapping name="CLIENT" pattern="%X{AUDIT.client}"/>
            <ColumnMapping name="METHOD" pattern="%X{AUDIT.method}"/>
            <ColumnMapping name="REQUEST_URI" pattern="%X{AUDIT.requestUri}"/>
            <ColumnMapping name="RESPONSE_CODE" pattern="%X{AUDIT.responseCode}" type="java.lang.Integer"/>
        </PingAccessJDBC>
        <RollingFile name="ApiAuditLog-PostgreSQL-Failover-File"
                     fileName="${sys:pa.home}/log/pingaccess_api_audit_postgresql_failover.log"
                     filePattern="${sys:pa.home}/log/pingaccess_api_audit_postgresql_failover.%d{yyyy-MM-dd}.log"
                     ignoreExceptions="false">
            <PatternLayout>
                <pattern>%d{ISO8601}| %X{exchangeId}| %X{AUDIT.trackingId}| %X{AUDIT.subject}| %X{AUDIT.authMech}| %X{AUDIT.client}| %X{AUDIT.method}| %X{AUDIT.requestUri}| %X{AUDIT.responseCode} %n</pattern>
            </PatternLayout>
            <Policies>
                <TimeBasedTriggeringPolicy />
            </Policies>
        </RollingFile>
        <PingAccessFailover name="ApiAuditLog-PostgreSQL" primary="ApiAuditLog-PostgreSQL-Database" error="File">
            <Failovers>
                <AppenderRef ref="ApiAuditLog-PostgreSQL-Failover-File"/>
            </Failovers>
        </PingAccessFailover>
        -->

        <!-- API Audit log for Splunk: A time/date based rolling appender

        NOTES:

        You must also uncomment the reference to this appender in 'apiaudit' Logger (in the 'Loggers' section)
        before it can be used.

        If you want to use UTF-8 encoding instead of system's default encoding add
        the following line to "PatternLayout"
        <charset>UTF-8</charset>
        -->
        <!--
        <RollingFile name="ApiAudit2Splunk"
                     fileName="${sys:pa.home}/log/pingaccess_api_audit_splunk.log"
                     filePattern="${sys:pa.home}/log/pingaccess_api_audit_splunk.%d{yyyy-MM-dd}.log"
                     ignoreExceptions="false">
            <PatternLayout>
                <pattern>%d{ISO8601} exchangeId="%X{exchangeId}" trackingId="%X{AUDIT.trackingId}" subject="%X{AUDIT.subject}" authMech="%X{AUDIT.authMech}" client="%X{AUDIT.client}" method="%X{AUDIT.method}" requestUri="%X{AUDIT.requestUri}" responseCode="%X{AUDIT.responseCode}" responder="%X{AUDIT.responder}" engineHostname="%X{AUDIT.host}" %n</pattern>
            </PatternLayout>
            <Policies>
                <TimeBasedTriggeringPolicy />
            </Policies>
        </RollingFile>
        -->

        <!-- API Audit log : HAR format file

        To enable:
          1) Uncomment the ApiAuditLog-HarFile element below
          2) Uncomment the reference to 'ApiAuditLog-HarFile' for the 'apiaudit' Logger (in the 'Loggers' section)

        Notes:
          1) With the below settings, this will log all requests/responses that the Administrator API receives (client)
          2) Additional settings and details can be found in the PingAccess online documentation
        -->

        <RollingFile name="ApiAuditLog-HarFile"
                      fileName="${sys:pa.home}/log/pingaccess_api_audit_har.log"
                      filePattern="${sys:pa.home}/log/pingaccess_api_audit_har.%d{yyyy-MM-dd}.log"
                      ignoreExceptions="false">
             <Filters>
                 <StatusCodeRegExFilter regex="2.."/>
                 <ContextMapFilter onMatch="NEUTRAL" onMismatch="DENY" operator="or">
                      <KeyValuePair key="AUDIT.http-client-request-method" value="PUT"/>
                      <KeyValuePair key="AUDIT.http-client-request-method" value="POST"/>
                      <KeyValuePair key="AUDIT.http-client-request-method" value="PATCH"/>
                 </ContextMapFilter>
                 <!-- Very important filter below: only allow application/json content-type which will filter out APIs that has binaries included in its response -->
                 <ContextMapFilter onMatch="ACCEPT" onMismatch="DENY" operator="or">
                      <KeyValuePair key="AUDIT.http-client-response-header-content-type" value="application/json"/>
                 </ContextMapFilter>
             </Filters>
             <HarLogLayout clientBodySizeLimit="16384" appBodySizeLimit="16384">
                  <KeyValuePair key="AUDIT.metadata" value="true"/>
                  <KeyValuePair key="AUDIT.http-client-response-content-text" value="true"/>
             </HarLogLayout>
            <Policies>
                <SizeBasedTriggeringPolicy size="100 MB" />
                <TimeBasedTriggeringPolicy />
            </Policies>
            <DefaultRolloverStrategy max="4" />
        </RollingFile>

        <!-- Engine auditing file logging configuration-->
        <!-- Additional Engine Audit values available:-->
        <!-- | %X{AUDIT.failedRuleClass}-->
        <!-- | %X{AUDIT.failedRuleSetName}-->
        <!-- | %X{AUDIT.host}-->
        <!-- | %X{AUDIT.targetHost}-->
        <!-- | %X{AUDIT.reqReceivedMillisec}-->
        <!-- | %X{AUDIT.reqSentMillisec}-->
        <!-- | %X{AUDIT.respReceivedMillisec}-->
        <!-- | %X{AUDIT.respSentMillisec}-->
        <!-- | %X{AUDIT.applicationId}-->
        <!-- | %X{AUDIT.resourceId}-->
        <!-- | %X{AUDIT.scopes}-->
        <!-- | %X{AUDIT.siteUnavailableInfo}-->
        <!-- | %X{AUDIT.clientCertIssuerDn}-->
        <!-- | %X{AUDIT.clientCertSubjectDn}-->
        <!-- | %X{AUDIT.clientCertSerialNum}-->
        <!-- | %appResponseHeader{a-header-name}-->
        <!-- | %clientResponseHeader{a-header-name}-->
        <!-- | %appRequestHeader{a-header-name}-->
        <!-- | %clientRequestHeader{a-header-name}-->
        <RollingFile name="EngineAuditLog-File"
                     fileName="${sys:pa.home}/log/pingaccess_engine_audit.log"
                     filePattern="${sys:pa.home}/log/pingaccess_engine_audit.log.%i"
                     ignoreExceptions="false">
            <PatternLayout>
                <!-- Uncomment this if you want to use UTF-8 encoding instead of system's default encoding. -->
                <!--
                <charset>UTF-8</charset>
                -->
                <pattern>%d{ISO8601}| %X{exchangeId}| %X{AUDIT.trackingId}| %X{AUDIT.roundTripMS} ms| %X{AUDIT.proxyRoundTripMS} ms| %X{AUDIT.resource}| %X{AUDIT.subject}| %X{AUDIT.authMech}| %X{AUDIT.client}| %X{AUDIT.method}| %X{AUDIT.requestUri}| %X{AUDIT.responseCode}| %X{AUDIT.failedRuleType}| %X{AUDIT.failedRuleName}| %X{AUDIT.applicationName}| %X{AUDIT.resourceName}| %X{AUDIT.pathPrefix} %n</pattern>
            </PatternLayout>
            <Policies>
                <SizeBasedTriggeringPolicy size="100 MB" />
            </Policies>
            <DefaultRolloverStrategy max="4" />
        </RollingFile>

        <!-- Engine Audit log : JDBC appender template for Oracle

        To enable:
          1) Uncomment the PingAccessJDBC, RollingFile and PingAccessFailover elements below
          2) Uncomment the reference to 'EngineAuditLog-Database-Failover' for the 'engineaudit' Logger (in the 'Loggers' section)
          3) Ensure that the 'log4j2.db.properties' file is populated with valid values
          4) Ensure that the Oracle JDBC driver JAR file is in the /lib directory

        Note:
          In PingAccessFailover, the 'retryIntervalSeconds' attribute may be added to specify the number of seconds that must
          pass before retrying the primary JDBC appender.
        -->
        <!--
        <PingAccessJDBC name="EngineAuditLog-Database" tableName="engine_audit_log" ignoreExceptions="false" bufferSize="256">
            <ConnectionFactory class="com.pingidentity.pa.cli.logging.database.Log4j2OracleConnectionFactory" method="getEngineAuditConnection" />
            <Column name="D_TIME" isEventTimestamp="true"/>
            <Column name="EXCHANGE_ID" pattern="%X{exchangeId}" />
            <Column name="TRACKING_ID" pattern="%X{AUDIT.trackingId}" />
            <Column name="ROUND_TRIP_MS" pattern="%X{AUDIT.roundTripMS}" />
            <Column name="PROXY_ROUND_TRIP_MS" pattern="%X{AUDIT.proxyRoundTripMS}" />
            <Column name="REQUESTED_RESOURCE" pattern="%X{AUDIT.resource}" />
            <Column name="SUBJECT" pattern="%X{AUDIT.subject}" />
            <Column name="AUTH_MECH" pattern="%X{AUDIT.authMech}" />
            <Column name="CLIENT" pattern="%X{AUDIT.client}" />
            <Column name="METHOD" pattern="%X{AUDIT.method}" />
            <Column name="REQUEST_URI" pattern="%X{AUDIT.requestUri}" isClob="true"/>
            <Column name="RESPONSE_CODE" pattern="%X{AUDIT.responseCode}" />
            <Column name="FAILED_RULE_TYPE" pattern="%X{AUDIT.failedRuleType}" />
            <Column name="FAILED_RULE_NAME" pattern="%X{AUDIT.failedRuleName}" />
            <Column name="FAILED_RULE_CLASS" pattern="%X{AUDIT.failedRuleClass}" />
            <Column name="APPLICATION_NAME" pattern="%X{AUDIT.applicationName}" />
            <Column name="RESOURCE_NAME" pattern="%X{AUDIT.resourceName}" />
            <Column name="PATH_PREFIX" pattern="%X{AUDIT.pathPrefix}" />
        </PingAccessJDBC>
        <RollingFile name="EngineAuditLog-Database-Failover-File"
                     fileName="${sys:pa.home}/log/pingaccess_engine_audit_oracle_failover.log"
                     filePattern="${sys:pa.home}/log/pingaccess_engine_audit_oracle_failover.%d{yyyy-MM-dd}.log"
                     ignoreExceptions="false">
            <PatternLayout>
                <pattern>%d{ISO8601}| %X{exchangeId}| %X{AUDIT.trackingId}| %X{AUDIT.roundTripMS} ms| %X{AUDIT.proxyRoundTripMS} ms| %X{AUDIT.resource}| %X{AUDIT.subject}| %X{AUDIT.authMech}| %X{AUDIT.client}| %X{AUDIT.method}| %X{AUDIT.requestUri}| %X{AUDIT.responseCode}| %X{AUDIT.failedRuleType}| %X{AUDIT.failedRuleName}| %X{AUDIT.applicationName}| %X{AUDIT.resourceName}| %X{AUDIT.pathPrefix} %n</pattern>
            </PatternLayout>
            <Policies>
                <TimeBasedTriggeringPolicy />
            </Policies>
        </RollingFile>
        <PingAccessFailover name="EngineAuditLog-Database-Failover" primary="EngineAuditLog-Database" error="File">
            <Failovers>
                <AppenderRef ref="EngineAuditLog-Database-Failover-File"/>
            </Failovers>
        </PingAccessFailover>
        -->

        <!-- Engine Audit log : JDBC appender template for Microsoft SQL Server

        To enable:
          1) Uncomment the PingAccessJDBC, RollingFile and PingAccessFailover elements below
          2) Uncomment the reference to 'EngineAuditLog-SQLServer-Database-Failover' for the 'engineaudit' Logger (in the 'Loggers' section)
          3) Ensure that the 'log4j2.db.properties' file is populated with valid values
          4) Ensure that the SQL Server JDBC driver JAR file is in the /lib directory

        Note:
          In PingAccessFailover, the 'retryIntervalSeconds' attribute may be added to specify the number of seconds that must
          pass before retrying the primary JDBC appender.
        -->
        <!--
        <PingAccessJDBC name="EngineAuditLog-SQLServer-Database" tableName="engine_audit_log" ignoreExceptions="false" bufferSize="256">
            <ConnectionFactory class="com.pingidentity.pa.cli.logging.database.Log4j2SqlServerConnectionFactory" method="getEngineAuditConnection" />
            <Column name="D_TIME" isEventTimestamp="true"/>
            <Column name="EXCHANGE_ID" pattern="%X{exchangeId}" />
            <Column name="TRACKING_ID" pattern="%X{AUDIT.trackingId}" />
            <Column name="ROUND_TRIP_MS" pattern="%X{AUDIT.roundTripMS}" />
            <Column name="PROXY_ROUND_TRIP_MS" pattern="%X{AUDIT.proxyRoundTripMS}" />
            <Column name="REQUESTED_RESOURCE" pattern="%X{AUDIT.resource}" />
            <Column name="SUBJECT" pattern="%X{AUDIT.subject}" />
            <Column name="AUTH_MECH" pattern="%X{AUDIT.authMech}" />
            <Column name="CLIENT" pattern="%X{AUDIT.client}" />
            <Column name="METHOD" pattern="%X{AUDIT.method}" />
            <Column name="REQUEST_URI" pattern="%X{AUDIT.requestUri}"/>
            <Column name="RESPONSE_CODE" pattern="%X{AUDIT.responseCode}" />
            <Column name="FAILED_RULE_TYPE" pattern="%X{AUDIT.failedRuleType}" />
            <Column name="FAILED_RULE_NAME" pattern="%X{AUDIT.failedRuleName}" />
            <Column name="FAILED_RULE_CLASS" pattern="%X{AUDIT.failedRuleClass}" />
            <Column name="APPLICATION_NAME" pattern="%X{AUDIT.applicationName}" />
            <Column name="RESOURCE_NAME" pattern="%X{AUDIT.resourceName}" />
            <Column name="PATH_PREFIX" pattern="%X{AUDIT.pathPrefix}" />
        </PingAccessJDBC>
        <RollingFile name="EngineAuditLog-SQLServer-Database-Failover-File"
                     fileName="${sys:pa.home}/log/pingaccess_engine_audit_sqlserver_failover.log"
                     filePattern="${sys:pa.home}/log/pingaccess_engine_audit_sqlserver_failover.%d{yyyy-MM-dd}.log"
                     ignoreExceptions="false">
            <PatternLayout>
                <pattern>%d{ISO8601}| %X{exchangeId}| %X{AUDIT.trackingId}| %X{AUDIT.roundTripMS} ms| %X{AUDIT.proxyRoundTripMS} ms| %X{AUDIT.resource}| %X{AUDIT.subject}| %X{AUDIT.authMech}| %X{AUDIT.client}| %X{AUDIT.method}| %X{AUDIT.requestUri}| %X{AUDIT.responseCode}| %X{AUDIT.failedRuleType}| %X{AUDIT.failedRuleName}| %X{AUDIT.applicationName}| %X{AUDIT.resourceName}| %X{AUDIT.pathPrefix} %n</pattern>
            </PatternLayout>
            <Policies>
                <TimeBasedTriggeringPolicy />
            </Policies>
        </RollingFile>
        <PingAccessFailover name="EngineAuditLog-SQLServer-Database-Failover" primary="EngineAuditLog-SQLServer-Database" error="File">
            <Failovers>
                <AppenderRef ref="EngineAuditLog-SQLServer-Database-Failover-File"/>
            </Failovers>
        </PingAccessFailover>
        -->

        <!-- Engine Audit log : JDBC appender template for PostgreSQL

        To enable:
          1) Uncomment the PingAccessJDBC, RollingFile and PingAccessFailover elements below
          2) Uncomment the reference to 'EngineAuditLog-PostgreSQL' for the 'engineaudit' Logger (in the 'Loggers' section)
          3) Ensure that the 'log4j2.db.properties' file is populated with valid values
          4) Ensure that the PostgreSQL JDBC driver JAR file is in the /lib directory

        Note:
          In PingAccessFailover, the 'retryIntervalSeconds' attribute may be added to specify the number of seconds that must
          pass before retrying the primary JDBC appender.
        -->
        <!--
        <PingAccessJDBC name="EngineAuditLog-PostgreSQL-Database" tableName="engine_audit_log" ignoreExceptions="false" bufferSize="256">
            <ConnectionFactory class="com.pingidentity.pa.cli.logging.database.Log4j2PostgreSQLConnectionFactory" method="getEngineAuditConnection" />
            <Column name="D_TIME" isEventTimestamp="true"/>
            <ColumnMapping name="EXCHANGE_ID" pattern="%X{exchangeId}" />
            <ColumnMapping name="TRACKING_ID" pattern="%X{AUDIT.trackingId}" />
            <ColumnMapping name="ROUND_TRIP_MS" pattern="%X{AUDIT.roundTripMS}" type="java.lang.Integer"/>
            <ColumnMapping name="PROXY_ROUND_TRIP_MS" pattern="%X{AUDIT.proxyRoundTripMS}" type="java.lang.Integer"/>
            <ColumnMapping name="REQUESTED_RESOURCE" pattern="%X{AUDIT.resource}" />
            <ColumnMapping name="SUBJECT" pattern="%X{AUDIT.subject}" />
            <ColumnMapping name="AUTH_MECH" pattern="%X{AUDIT.authMech}" />
            <ColumnMapping name="CLIENT" pattern="%X{AUDIT.client}" />
            <ColumnMapping name="METHOD" pattern="%X{AUDIT.method}" />
            <ColumnMapping name="REQUEST_URI" pattern="%X{AUDIT.requestUri}"/>
            <ColumnMapping name="RESPONSE_CODE" pattern="%X{AUDIT.responseCode}" type="java.lang.Integer"/>
            <ColumnMapping name="FAILED_RULE_TYPE" pattern="%X{AUDIT.failedRuleType}" />
            <ColumnMapping name="FAILED_RULE_NAME" pattern="%X{AUDIT.failedRuleName}" />
            <ColumnMapping name="FAILED_RULE_CLASS" pattern="%X{AUDIT.failedRuleClass}" />
            <ColumnMapping name="APPLICATION_NAME" pattern="%X{AUDIT.applicationName}" />
            <ColumnMapping name="RESOURCE_NAME" pattern="%X{AUDIT.resourceName}" />
            <ColumnMapping name="PATH_PREFIX" pattern="%X{AUDIT.pathPrefix}" />
        </PingAccessJDBC>
        <RollingFile name="EngineAuditLog-PostgreSQL-Failover-File"
                     fileName="${sys:pa.home}/log/pingaccess_engine_audit_postgresql_failover.log"
                     filePattern="${sys:pa.home}/log/pingaccess_engine_audit_postgresql_failover.%d{yyyy-MM-dd}.log"
                     ignoreExceptions="false">
            <PatternLayout>
                <pattern>%d{ISO8601}| %X{exchangeId}| %X{AUDIT.trackingId}| %X{AUDIT.roundTripMS} ms| %X{AUDIT.proxyRoundTripMS} ms| %X{AUDIT.resource}| %X{AUDIT.subject}| %X{AUDIT.authMech}| %X{AUDIT.client}| %X{AUDIT.method}| %X{AUDIT.requestUri}| %X{AUDIT.responseCode}| %X{AUDIT.failedRuleType}| %X{AUDIT.failedRuleName}| %X{AUDIT.applicationName}| %X{AUDIT.resourceName}| %X{AUDIT.pathPrefix} %n</pattern>
            </PatternLayout>
            <Policies>
                <TimeBasedTriggeringPolicy />
            </Policies>
        </RollingFile>
        <PingAccessFailover name="EngineAuditLog-PostgreSQL" primary="EngineAuditLog-PostgreSQL-Database" error="File">
            <Failovers>
                <AppenderRef ref="EngineAuditLog-PostgreSQL-Failover-File"/>
            </Failovers>
        </PingAccessFailover>
        -->

        <!-- Engine Audit log for Splunk: A time/date based rolling appender

        NOTES:

        You must also uncomment the reference to this appender in 'engineaudit' Logger (in the 'Loggers' section)
        before it can be used.

        If you want to use UTF-8 encoding instead of system's default encoding add
        the following line to "PatternLayout"
        <charset>UTF-8</charset>
        -->
        <!--
        <RollingFile name="EngineAudit2Splunk"
                     fileName="${sys:pa.home}/log/pingaccess_engine_audit_splunk.log"
                     filePattern="${sys:pa.home}/log/pingaccess_engine_audit_splunk.%d{yyyy-MM-dd}.log"
                     ignoreExceptions="false">
            <PatternLayout>
                <pattern>%d exchangeId="%X{exchangeId}" trackingId="%X{AUDIT.trackingId}" roundTripMS="%X{AUDIT.roundTripMS}" proxyRoundTripMS="%X{AUDIT.proxyRoundTripMS}" resource="%X{AUDIT.resource}" subject="%X{AUDIT.subject}" authMech="%X{AUDIT.authMech}" client="%X{AUDIT.client}" method="%X{AUDIT.method}" requestUri="%X{AUDIT.requestUri}" responseCode="%X{AUDIT.responseCode}" failedRuleType="%X{AUDIT.failedRuleType}" failedRuleName="%X{AUDIT.failedRuleName}" failedRuleClass="%X{AUDIT.failedRuleClass}" applicationName="%X{AUDIT.applicationName}" resourceName="%X{AUDIT.resourceName}" pathPrefix="%X{AUDIT.pathPrefix}" responder="%X{AUDIT.responder}" engineHostname="%X{AUDIT.host}" targetHost="%X{AUDIT.targetHost}" %n</pattern>
            </PatternLayout>
            <Policies>
                <TimeBasedTriggeringPolicy />
            </Policies>
        </RollingFile>
        -->

        <!-- Engine Audit log : HAR format file

        To enable:
          1) Uncomment the EngineAuditLog-HarFile element below
          2) Uncomment the reference to 'EngineAuditLog-HarFile' for the 'engineaudit' Logger (in the 'Loggers' section)

        Notes:
          1) With the below settings, this will log all requests/responses with a 5XX response code that the engine receives (client) and sends (app)
          2) Additional settings and details can be found in the PingAccess online documentation
        -->
        <!--
        <RollingFile name="EngineAuditLog-HarFile"
                     fileName="${sys:pa.home}/log/pingaccess_engine_audit_har.log"
                     filePattern="${sys:pa.home}/log/pingaccess_engine_audit_har.%d{yyyy-MM-dd}.log"
                     ignoreExceptions="false">
            <StatusCodeRegExFilter regex="5.."/>
            <HarLogLayout clientBodySizeLimit="16384" appBodySizeLimit="16384">
                <KeyValuePair key="AUDIT.metadata" value="true"/>
                <KeyValuePair key="AUDIT.http-client" value="true"/>
                <KeyValuePair key="AUDIT.http-app" value="true"/>
            </HarLogLayout>
            <Policies>
                <TimeBasedTriggeringPolicy />
            </Policies>
        </RollingFile>
        -->

        <!-- Agent auditing file logging configuration-->
        <!-- Additional Agent Audit values available:-->
        <!-- | %X{AUDIT.failedRuleClass}-->
        <!-- | %X{AUDIT.failedRuleSetName}-->
        <!-- | %X{AUDIT.host}-->
        <!-- | %X{AUDIT.roundTripMS}-->
        <!-- | %X{AUDIT.reqReceivedMillisec}-->
        <!-- | %X{AUDIT.respSentMillisec}-->
        <!-- | %X{AUDIT.applicationId}-->
        <!-- | %X{AUDIT.resourceId}-->
        <!-- | %X{AUDIT.scopes}-->
        <!-- | %X{AUDIT.agentName}-->
        <!-- | %appResponseHeader{a-header-name}-->
        <!-- | %clientResponseHeader{a-header-name}-->
        <!-- | %appRequestHeader{a-header-name}-->
        <!-- | %clientRequestHeader{a-header-name}-->
        <!-- The agent{} pattern matches data sent from an Agent via the 'vnd-pi-agent' header. The following well-known
             keys are available:
                h - The hostname where the Agent resides
                t - The type of Agent and/or the type of platform where the Agent resides
                v - The version of the Agent making the request
        -->
        <!-- | %agent{h}-->
        <!-- | %agent{t}-->
        <!-- | %agent{v}-->
        <RollingFile name="AgentAuditLog-File"
                     fileName="${sys:pa.home}/log/pingaccess_agent_audit.log"
                     filePattern="${sys:pa.home}/log/pingaccess_agent_audit.log.%i"
                     ignoreExceptions="false">
            <PatternLayout>
                <!-- Uncomment this if you want to use UTF-8 encoding instead of system's default encoding. -->
                <!--
                <charset>UTF-8</charset>
                -->
                <pattern>%d{ISO8601}| %X{exchangeId}| %X{AUDIT.trackingId}| %X{AUDIT.roundTripMS} ms| %X{AUDIT.resource}| %X{AUDIT.client}| %X{AUDIT.method}| %X{AUDIT.requestUri}| %X{AUDIT.responseCode}| %X{AUDIT.applicationName}| %X{AUDIT.resourceName}| %X{AUDIT.pathPrefix} %n</pattern>
            </PatternLayout>
            <Policies>
                <SizeBasedTriggeringPolicy size="100 MB" />
            </Policies>
            <DefaultRolloverStrategy max="4" />
        </RollingFile>

        <!-- Agent Audit log : JDBC appender template for Oracle

        To enable:
          1) Uncomment the PingAccessJDBC, RollingFile and PingAccessFailover elements below
          2) Uncomment the reference to 'AgentAuditLog-Database-Failover' for the 'agentaudit' Logger (in the 'Loggers' section)
          3) Ensure that the 'log4j2.db.properties' file is populated with valid values
          4) Ensure that the Oracle JDBC driver JAR file is in the /lib directory

        Note:
          In PingAccessFailover, the 'retryIntervalSeconds' attribute may be added to specify the number of seconds that must
          pass before retrying the primary JDBC appender.
        -->
        <!--
        <PingAccessJDBC name="AgentAuditLog-Database" tableName="agent_audit_log" ignoreExceptions="false" bufferSize="256">
            <ConnectionFactory class="com.pingidentity.pa.cli.logging.database.Log4j2OracleConnectionFactory" method="getAgentAuditConnection" />
            <Column name="D_TIME" isEventTimestamp="true"/>
            <Column name="EXCHANGE_ID" pattern="%X{exchangeId}" />
            <Column name="TRACKING_ID" pattern="%X{AUDIT.trackingId}" />
            <Column name="ROUND_TRIP_MS" pattern="%X{AUDIT.roundTripMS}" />
            <Column name="REQUESTED_RESOURCE" pattern="%X{AUDIT.resource}" />
            <Column name="CLIENT" pattern="%X{AUDIT.client}" />
            <Column name="METHOD" pattern="%X{AUDIT.method}" />
            <Column name="REQUEST_URI" pattern="%X{AUDIT.requestUri}" isClob="true"/>
            <Column name="RESPONSE_CODE" pattern="%X{AUDIT.responseCode}" />
            <Column name="APPLICATION_NAME" pattern="%X{AUDIT.applicationName}" />
            <Column name="RESOURCE_NAME" pattern="%X{AUDIT.resourceName}" />
            <Column name="PATH_PREFIX" pattern="%X{AUDIT.pathPrefix}" />
        </PingAccessJDBC>
        <RollingFile name="AgentAuditLog-Database-Failover-File"
                     fileName="${sys:pa.home}/log/pingaccess_agent_audit_oracle_failover.log"
                     filePattern="${sys:pa.home}/log/pingaccess_agent_audit_oracle_failover.%d{yyyy-MM-dd}.log"
                     ignoreExceptions="false">
            <PatternLayout>
                <pattern>%d{ISO8601}| %X{exchangeId}| %X{AUDIT.trackingId}| %X{AUDIT.roundTripMS} ms| %X{AUDIT.resource}| %X{AUDIT.client}| %X{AUDIT.method}| %X{AUDIT.requestUri}| %X{AUDIT.responseCode}| %X{AUDIT.applicationName}| %X{AUDIT.resourceName}| %X{AUDIT.pathPrefix} %n</pattern>
            </PatternLayout>
            <Policies>
                <TimeBasedTriggeringPolicy />
            </Policies>
        </RollingFile>
        <PingAccessFailover name="AgentAuditLog-Database-Failover" primary="AgentAuditLog-Database" error="File">
            <Failovers>
                <AppenderRef ref="AgentAuditLog-Database-Failover-File"/>
            </Failovers>
        </PingAccessFailover>
        -->

        <!-- Agent Audit log : JDBC appender template for Microsoft SQL Server

        To enable:
          1) Uncomment the PingAccessJDBC, RollingFile and PingAccessFailover elements below
          2) Uncomment the reference to 'AgentAuditLog-SQLServer-Database-Failover' for the 'agentaudit' Logger (in the 'Loggers' section)
          3) Ensure that the 'log4j2.db.properties' file is populated with valid values
          4) Ensure that the SQL Server JDBC driver JAR file is in the /lib directory

        Note:
          In PingAccessFailover, the 'retryIntervalSeconds' attribute may be added to specify the number of seconds that must
          pass before retrying the primary JDBC appender.
        -->
        <!--
        <PingAccessJDBC name="AgentAuditLog-SQLServer-Database" tableName="agent_audit_log" ignoreExceptions="false" bufferSize="256">
            <ConnectionFactory class="com.pingidentity.pa.cli.logging.database.Log4j2SqlServerConnectionFactory" method="getAgentAuditConnection" />
            <Column name="D_TIME" isEventTimestamp="true"/>
            <Column name="EXCHANGE_ID" pattern="%X{exchangeId}" />
            <Column name="TRACKING_ID" pattern="%X{AUDIT.trackingId}" />
            <Column name="ROUND_TRIP_MS" pattern="%X{AUDIT.roundTripMS}" />
            <Column name="REQUESTED_RESOURCE" pattern="%X{AUDIT.resource}" />
            <Column name="CLIENT" pattern="%X{AUDIT.client}" />
            <Column name="METHOD" pattern="%X{AUDIT.method}" />
            <Column name="REQUEST_URI" pattern="%X{AUDIT.requestUri}"/>
            <Column name="RESPONSE_CODE" pattern="%X{AUDIT.responseCode}" />
            <Column name="APPLICATION_NAME" pattern="%X{AUDIT.applicationName}" />
            <Column name="RESOURCE_NAME" pattern="%X{AUDIT.resourceName}" />
            <Column name="PATH_PREFIX" pattern="%X{AUDIT.pathPrefix}" />
        </PingAccessJDBC>
        <RollingFile name="AgentAuditLog-SQLServer-Database-Failover-File"
                     fileName="${sys:pa.home}/log/pingaccess_agent_audit_sqlserver_failover.log"
                     filePattern="${sys:pa.home}/log/pingaccess_agent_audit_sqlserver_failover.%d{yyyy-MM-dd}.log"
                     ignoreExceptions="false">
            <PatternLayout>
                <pattern>%d{ISO8601}| %X{exchangeId}| %X{AUDIT.trackingId}| %X{AUDIT.roundTripMS} ms| %X{AUDIT.resource}| %X{AUDIT.client}| %X{AUDIT.method}| %X{AUDIT.requestUri}| %X{AUDIT.responseCode}| %X{AUDIT.applicationName}| %X{AUDIT.resourceName}| %X{AUDIT.pathPrefix} %n</pattern>
            </PatternLayout>
            <Policies>
                <TimeBasedTriggeringPolicy />
            </Policies>
        </RollingFile>
        <PingAccessFailover name="AgentAuditLog-SQLServer-Database-Failover" primary="AgentAuditLog-SQLServer-Database" error="File">
            <Failovers>
                <AppenderRef ref="AgentAuditLog-SQLServer-Database-Failover-File"/>
            </Failovers>
        </PingAccessFailover>
        -->

        <!-- Agent Audit log : JDBC appender template for PostgreSQL

        To enable:
          1) Uncomment the PingAccessJDBC, RollingFile and PingAccessFailover elements below
          2) Uncomment the reference to 'AgentAuditLog-PostgreSQL' for the 'agentaudit' Logger (in the 'Loggers' section)
          3) Ensure that the 'log4j2.db.properties' file is populated with valid values
          4) Ensure that the PostgreSQL JDBC driver JAR file is in the /lib directory

        Note:
          In PingAccessFailover, the 'retryIntervalSeconds' attribute may be added to specify the number of seconds that must
          pass before retrying the primary JDBC appender.
        -->
        <!--
        <PingAccessJDBC name="AgentAuditLog-PostgreSQL-Database" tableName="agent_audit_log" ignoreExceptions="false" bufferSize="256">
            <ConnectionFactory class="com.pingidentity.pa.cli.logging.database.Log4j2PostgreSQLConnectionFactory" method="getAgentAuditConnection" />
            <Column name="D_TIME" isEventTimestamp="true"/>
            <ColumnMapping name="EXCHANGE_ID" pattern="%X{exchangeId}" />
            <ColumnMapping name="TRACKING_ID" pattern="%X{AUDIT.trackingId}" />
            <ColumnMapping name="ROUND_TRIP_MS" pattern="%X{AUDIT.roundTripMS}" type="java.lang.Integer"/>
            <ColumnMapping name="REQUESTED_RESOURCE" pattern="%X{AUDIT.resource}" />
            <ColumnMapping name="CLIENT" pattern="%X{AUDIT.client}" />
            <ColumnMapping name="METHOD" pattern="%X{AUDIT.method}" />
            <ColumnMapping name="REQUEST_URI" pattern="%X{AUDIT.requestUri}"/>
            <ColumnMapping name="RESPONSE_CODE" pattern="%X{AUDIT.responseCode}" type="java.lang.Integer"/>
            <ColumnMapping name="APPLICATION_NAME" pattern="%X{AUDIT.applicationName}" />
            <ColumnMapping name="RESOURCE_NAME" pattern="%X{AUDIT.resourceName}" />
            <ColumnMapping name="PATH_PREFIX" pattern="%X{AUDIT.pathPrefix}" />
        </PingAccessJDBC>
        <RollingFile name="AgentAuditLog-PostgreSQL-Failover-File"
                     fileName="${sys:pa.home}/log/pingaccess_agent_audit_postgresql_failover.log"
                     filePattern="${sys:pa.home}/log/pingaccess_agent_audit_postgresql_failover.%d{yyyy-MM-dd}.log"
                     ignoreExceptions="false">
            <PatternLayout>
                <pattern>%d{ISO8601}| %X{exchangeId}| %X{AUDIT.trackingId}| %X{AUDIT.roundTripMS} ms| %X{AUDIT.resource}| %X{AUDIT.client}| %X{AUDIT.method}| %X{AUDIT.requestUri}| %X{AUDIT.responseCode}| %X{AUDIT.applicationName}| %X{AUDIT.resourceName}| %X{AUDIT.pathPrefix} %n</pattern>
            </PatternLayout>
            <Policies>
                <TimeBasedTriggeringPolicy />
            </Policies>
        </RollingFile>
        <PingAccessFailover name="AgentAuditLog-PostgreSQL" primary="AgentAuditLog-PostgreSQL-Database" error="File">
            <Failovers>
                <AppenderRef ref="AgentAuditLog-PostgreSQL-Failover-File"/>
            </Failovers>
        </PingAccessFailover>
        -->

        <!-- Agent Audit log for Splunk: A time/date based rolling appender

        NOTES:

        You must also uncomment the reference to this appender in 'agentaudit' Logger (in the 'Loggers' section)
        before it can be used.

        If you want to use UTF-8 encoding instead of system's default encoding add
        the following line to "PatternLayout"
        <charset>UTF-8</charset>
        -->
        <!--
        <RollingFile name="AgentAudit2Splunk"
                     fileName="${sys:pa.home}/log/pingaccess_agent_audit_splunk.log"
                     filePattern="${sys:pa.home}/log/pingaccess_agent_audit_splunk.%d{yyyy-MM-dd}.log"
                     ignoreExceptions="false">
            <PatternLayout>
                <pattern>%d exchangeId="%X{exchangeId}" trackingId="%X{AUDIT.trackingId}" roundTripMS="%X{AUDIT.roundTripMS}" resource="%X{AUDIT.resource}" client="%X{AUDIT.client}" method="%X{AUDIT.method}" requestUri="%X{AUDIT.requestUri}" responseCode="%X{AUDIT.responseCode}" applicationName="%X{AUDIT.applicationName}" resourceName="%X{AUDIT.resourceName}" pathPrefix="%X{AUDIT.pathPrefix}" responder="%X{AUDIT.responder}" engineHostname="%X{AUDIT.host}" agentName="%X{AUDIT.agentName}" %n</pattern>
            </PatternLayout>
            <Policies>
                <TimeBasedTriggeringPolicy />
            </Policies>
        </RollingFile>
        -->

        <!-- Agent Audit log : HAR format file

        To enable:
          1) Uncomment the AgentAuditLog-HarFile element below
          2) Uncomment the reference to 'AgentAuditLog-HarFile' for the 'agentaudit' Logger (in the 'Loggers' section)

        Notes:
          1) With the below settings, this will log all agent requests/responses with a 5XX response code that are received (client) and sent (app)
          2) Additional settings and details can be found in the PingAccess online documentation
          3) The app request is the request that has been modified by identity mappings and rules
          4) The app response is the initial response generated by PA when access is allowed; this may not be useful for debugging
        -->
        <!--
        <RollingFile name="AgentAuditLog-HarFile"
                     fileName="${sys:pa.home}/log/pingaccess_agent_audit_har.log"
                     filePattern="${sys:pa.home}/log/pingaccess_agent_audit_har.%d{yyyy-MM-dd}.log"
                     ignoreExceptions="false">
            <StatusCodeRegExFilter regex="5.."/>
            <HarLogLayout clientBodySizeLimit="16384" appBodySizeLimit="16384">
                <KeyValuePair key="AUDIT.metadata" value="true"/>
                <KeyValuePair key="AUDIT.http-client" value="true"/>
                <KeyValuePair key="AUDIT.http-app" value="true"/>
            </HarLogLayout>
            <Policies>
                <TimeBasedTriggeringPolicy />
            </Policies>
        </RollingFile>
        -->

        <!-- Sideband Client auditing file logging configuration-->
        <!-- Additional Sideband Client Audit values available:-->
        <!-- | %X{AUDIT.failedRuleClass}-->
        <!-- | %X{AUDIT.failedRuleSetName}-->
        <!-- | %X{AUDIT.host}-->
        <!-- | %X{AUDIT.roundTripMS}-->
        <!-- | %X{AUDIT.reqReceivedMillisec}-->
        <!-- | %X{AUDIT.respSentMillisec}-->
        <!-- | %X{AUDIT.sidebandName}-->
        <!-- | %X{AUDIT.sidebandDecision}-->
        <!-- | %appResponseHeader{a-header-name}-->
        <!-- | %clientResponseHeader{a-header-name}-->
        <!-- | %appRequestHeader{a-header-name}-->
        <!-- | %clientRequestHeader{a-header-name}-->
        <RollingFile name="SidebandClientAuditLog-File"
                     fileName="${sys:pa.home}/log/pingaccess_sideband_client_audit.log"
                     filePattern="${sys:pa.home}/log/pingaccess_sideband_client_audit.log.%i"
                     ignoreExceptions="false">
            <PatternLayout>
                <!-- Uncomment this if you want to use UTF-8 encoding instead of system's default encoding. -->
                <!--
                <charset>UTF-8</charset>
                -->
                <pattern>%d{ISO8601}| %X{exchangeId}| %X{AUDIT.trackingId}| %X{AUDIT.roundTripMS} ms| %X{AUDIT.client}| %X{AUDIT.method}| %X{AUDIT.requestUri}| %X{AUDIT.responseCode}| %X{AUDIT.sidebandName}| %X{AUDIT.sidebandDecision} %n</pattern>
            </PatternLayout>
            <Policies>
                <SizeBasedTriggeringPolicy size="100 MB" />
            </Policies>
            <DefaultRolloverStrategy max="4" />
        </RollingFile>

        <!-- Sideband Client Audit log : JDBC appender template for Oracle

        To enable:
          1) Uncomment the PingAccessJDBC, RollingFile and PingAccessFailover elements below
          2) Uncomment the reference to 'SidebandClientAuditLog-Database-Failover' for the 'sidebandclientaudit' Logger (in the 'Loggers' section)
          3) Ensure that the 'log4j2.db.properties' file is populated with valid values
          4) Ensure that the Oracle JDBC driver JAR file is in the /lib directory

        Note:
          In PingAccessFailover, the 'retryIntervalSeconds' attribute may be added to specify the number of seconds that must
          pass before retrying the primary JDBC appender.
        -->
        <!--
        <PingAccessJDBC name="SidebandClientAuditLog-Database" tableName="sideband_client_audit_log" ignoreExceptions="false" bufferSize="256">
            <ConnectionFactory class="com.pingidentity.pa.cli.logging.database.Log4j2OracleConnectionFactory" method="getSidebandClientAuditConnection" />
            <Column name="D_TIME" isEventTimestamp="true"/>
            <Column name="EXCHANGE_ID" pattern="%X{exchangeId}" />
            <Column name="TRACKING_ID" pattern="%X{AUDIT.trackingId}" />
            <Column name="ROUND_TRIP_MS" pattern="%X{AUDIT.roundTripMS}" />
            <Column name="CLIENT" pattern="%X{AUDIT.client}" />
            <Column name="METHOD" pattern="%X{AUDIT.method}" />
            <Column name="REQUEST_URI" pattern="%X{AUDIT.requestUri}" isClob="true"/>
            <Column name="RESPONSE_CODE" pattern="%X{AUDIT.responseCode}" />
            <Column name="SIDEBAND_NAME" pattern="%X{AUDIT.sidebandName}" />
            <Column name="SIDEBAND_DECISION" pattern="%X{AUDIT.sidebandDecision}" />
        </PingAccessJDBC>
        <RollingFile name="SidebandClientAuditLog-Database-Failover-File"
                     fileName="${sys:pa.home}/log/pingaccess_sideband_client_audit_oracle_failover.log"
                     filePattern="${sys:pa.home}/log/pingaccess_sideband_client_audit_oracle_failover.%d{yyyy-MM-dd}.log"
                     ignoreExceptions="false">
            <PatternLayout>
                <pattern>%d{ISO8601}| %X{exchangeId}| %X{AUDIT.trackingId}| %X{AUDIT.roundTripMS} ms| %X{AUDIT.client}| %X{AUDIT.method}| %X{AUDIT.requestUri}| %X{AUDIT.responseCode}| %X{AUDIT.sidebandName}| %X{AUDIT.sidebandDecision} %n</pattern>
            </PatternLayout>
            <Policies>
                <TimeBasedTriggeringPolicy />
            </Policies>
        </RollingFile>
        <PingAccessFailover name="SidebandClientAuditLog-Database-Failover" primary="SidebandClientAuditLog-Database" error="File">
            <Failovers>
                <AppenderRef ref="SidebandClientAuditLog-Database-Failover-File"/>
            </Failovers>
        </PingAccessFailover>
        -->

        <!-- SidebandClient Audit log : JDBC appender template for Microsoft SQL Server

        To enable:
          1) Uncomment the PingAccessJDBC, RollingFile and PingAccessFailover elements below
          2) Uncomment the reference to 'SidebandClientAuditLog-SQLServer-Database-Failover' for the 'sidebandclientaudit' Logger (in the 'Loggers' section)
          3) Ensure that the 'log4j2.db.properties' file is populated with valid values
          4) Ensure that the SQL Server JDBC driver JAR file is in the /lib directory

        Note:
          In PingAccessFailover, the 'retryIntervalSeconds' attribute may be added to specify the number of seconds that must
          pass before retrying the primary JDBC appender.
        -->
        <!--
        <PingAccessJDBC name="SidebandClientAuditLog-SQLServer-Database" tableName="sideband_client_audit_log" ignoreExceptions="false" bufferSize="256">
            <ConnectionFactory class="com.pingidentity.pa.cli.logging.database.Log4j2SqlServerConnectionFactory" method="getSidebandClientAuditConnection" />
            <Column name="D_TIME" isEventTimestamp="true"/>
            <Column name="EXCHANGE_ID" pattern="%X{exchangeId}" />
            <Column name="TRACKING_ID" pattern="%X{AUDIT.trackingId}" />
            <Column name="ROUND_TRIP_MS" pattern="%X{AUDIT.roundTripMS}" />
            <Column name="CLIENT" pattern="%X{AUDIT.client}" />
            <Column name="METHOD" pattern="%X{AUDIT.method}" />
            <Column name="REQUEST_URI" pattern="%X{AUDIT.requestUri}"/>
            <Column name="RESPONSE_CODE" pattern="%X{AUDIT.responseCode}" />
            <Column name="SIDEBAND_NAME" pattern="%X{AUDIT.sidebandName}" />
            <Column name="SIDEBAND_DECISION" pattern="%X{AUDIT.sidebandDecision}" />
        </PingAccessJDBC>
        <RollingFile name="SidebandClientAuditLog-SQLServer-Database-Failover-File"
                     fileName="${sys:pa.home}/log/pingaccess_sideband_client_audit_sqlserver_failover.log"
                     filePattern="${sys:pa.home}/log/pingaccess_sideband_client_audit_sqlserver_failover.%d{yyyy-MM-dd}.log"
                     ignoreExceptions="false">
            <PatternLayout>
                <pattern>%d{ISO8601}| %X{exchangeId}| %X{AUDIT.trackingId}| %X{AUDIT.roundTripMS} ms| %X{AUDIT.client}| %X{AUDIT.method}| %X{AUDIT.requestUri}| %X{AUDIT.responseCode}| %X{AUDIT.sidebandName}| %X{AUDIT.sidebandDecision} %n</pattern>
            </PatternLayout>
            <Policies>
                <TimeBasedTriggeringPolicy />
            </Policies>
        </RollingFile>
        <PingAccessFailover name="SidebandClientAuditLog-SQLServer-Database-Failover" primary="SidebandClientAuditLog-SQLServer-Database" error="File">
            <Failovers>
                <AppenderRef ref="SidebandClientAuditLog-SQLServer-Database-Failover-File"/>
            </Failovers>
        </PingAccessFailover>
        -->

        <!-- SidebandClient Audit log : JDBC appender template for PostgreSQL

        To enable:
          1) Uncomment the PingAccessJDBC, RollingFile and PingAccessFailover elements below
          2) Uncomment the reference to 'SidebandClientAuditLog-PostgreSQL' for the 'sidebandclientaudit' Logger (in the 'Loggers' section)
          3) Ensure that the 'log4j2.db.properties' file is populated with valid values
          4) Ensure that the PostgreSQL JDBC driver JAR file is in the /lib directory

        Note:
          In PingAccessFailover, the 'retryIntervalSeconds' attribute may be added to specify the number of seconds that must
          pass before retrying the primary JDBC appender.
        -->
        <!--
        <PingAccessJDBC name="SidebandClientAuditLog-PostgreSQL-Database" tableName="sideband_client_audit_log" ignoreExceptions="false" bufferSize="256">
            <ConnectionFactory class="com.pingidentity.pa.cli.logging.database.Log4j2PostgreSQLConnectionFactory" method="getSidebandClientAuditConnection" />
            <Column name="D_TIME" isEventTimestamp="true"/>
            <ColumnMapping name="EXCHANGE_ID" pattern="%X{exchangeId}" />
            <ColumnMapping name="TRACKING_ID" pattern="%X{AUDIT.trackingId}" />
            <ColumnMapping name="ROUND_TRIP_MS" pattern="%X{AUDIT.roundTripMS}" type="java.lang.Integer"/>
            <ColumnMapping name="CLIENT" pattern="%X{AUDIT.client}" />
            <ColumnMapping name="METHOD" pattern="%X{AUDIT.method}" />
            <ColumnMapping name="REQUEST_URI" pattern="%X{AUDIT.requestUri}"/>
            <ColumnMapping name="RESPONSE_CODE" pattern="%X{AUDIT.responseCode}" type="java.lang.Integer"/>
            <ColumnMapping name="SIDEBAND_NAME" pattern="%X{AUDIT.sidebandName}" />
            <ColumnMapping name="SIDEBAND_DECISION" pattern="%X{AUDIT.sidebandDecision}" />
        </PingAccessJDBC>
        <RollingFile name="SidebandClientAuditLog-PostgreSQL-Failover-File"
                     fileName="${sys:pa.home}/log/pingaccess_sideband_client_audit_postgresql_failover.log"
                     filePattern="${sys:pa.home}/log/pingaccess_sideband_client_audit_postgresql_failover.%d{yyyy-MM-dd}.log"
                     ignoreExceptions="false">
            <PatternLayout>
                <pattern>%d{ISO8601}| %X{exchangeId}| %X{AUDIT.trackingId}| %X{AUDIT.roundTripMS} ms| %X{AUDIT.client}| %X{AUDIT.method}| %X{AUDIT.requestUri}| %X{AUDIT.responseCode}| %X{AUDIT.sidebandName}| %X{AUDIT.sidebandDecision} %n</pattern>
            </PatternLayout>
            <Policies>
                <TimeBasedTriggeringPolicy />
            </Policies>
        </RollingFile>
        <PingAccessFailover name="SidebandClientAuditLog-PostgreSQL" primary="SidebandClientAuditLog-PostgreSQL-Database" error="File">
            <Failovers>
                <AppenderRef ref="SidebandClientAuditLog-PostgreSQL-Failover-File"/>
            </Failovers>
        </PingAccessFailover>
        -->

        <!-- SidebandClient Audit log for Splunk: A time/date based rolling appender

        NOTES:

        You must also uncomment the reference to this appender in 'sidebandclientaudit' Logger (in the 'Loggers' section)
        before it can be used.

        If you want to use UTF-8 encoding instead of system's default encoding add
        the following line to "PatternLayout"
        <charset>UTF-8</charset>
        -->
        <!--
        <RollingFile name="SidebandClientAudit2Splunk"
                     fileName="${sys:pa.home}/log/pingaccess_sideband_client_audit_splunk.log"
                     filePattern="${sys:pa.home}/log/pingaccess_sideband_client_audit_splunk.%d{yyyy-MM-dd}.log"
                     ignoreExceptions="false">
            <PatternLayout>
                <pattern>%d exchangeId="%X{exchangeId}" trackingId="%X{AUDIT.trackingId}" roundTripMS="%X{AUDIT.roundTripMS}" client="%X{AUDIT.client}" method="%X{AUDIT.method}" requestUri="%X{AUDIT.requestUri}" responseCode="%X{AUDIT.responseCode}" sidebandName="%X{AUDIT.sidebandName}" sidebandDecision="%X{AUDIT.sidebandDecision}" responder="%X{AUDIT.responder}" %n</pattern>
            </PatternLayout>
            <Policies>
                <TimeBasedTriggeringPolicy />
            </Policies>
        </RollingFile>
        -->

        <!-- SidebandClient Audit log : HAR format file

        To enable:
          1) Uncomment the SidebandClientAuditLog-HarFile element below
          2) Uncomment the reference to 'SidebandClientAuditLog-HarFile' for the 'sidebandclientaudit' Logger (in the 'Loggers' section)

        Notes:
          1) With the below settings, this will log all requests/responses directly from the sideband client with a 5XX response code that are received (client) and sent (app)
          2) Additional settings and details can be found in the PingAccess online documentation
          3) The app request is the request that has been modified by identity mappings and rules
          4) The app response is the initial response generated by PA when access is allowed; this may not be useful for debugging
        -->
        <!--
        <RollingFile name="SidebandClientAuditLog-HarFile"
                     fileName="${sys:pa.home}/log/pingaccess_sideband_client_audit_har.log"
                     filePattern="${sys:pa.home}/log/pingaccess_sideband_client_audit_har.%d{yyyy-MM-dd}.log"
                     ignoreExceptions="false">
            <StatusCodeRegExFilter regex="5.."/>
            <HarLogLayout clientBodySizeLimit="16384" appBodySizeLimit="16384">
                <KeyValuePair key="AUDIT.metadata" value="true"/>
                <KeyValuePair key="AUDIT.http-client" value="true"/>
                <KeyValuePair key="AUDIT.http-app" value="true"/>
            </HarLogLayout>
            <Policies>
                <TimeBasedTriggeringPolicy />
            </Policies>
        </RollingFile>
        -->

        <!-- Sideband auditing file logging configuration-->
        <!-- Additional Sideband Audit values available:-->
        <!-- | %X{AUDIT.failedRuleClass}-->
        <!-- | %X{AUDIT.failedRuleSetName}-->
        <!-- | %X{AUDIT.host}-->
        <!-- | %X{AUDIT.roundTripMS}-->
        <!-- | %X{AUDIT.reqReceivedMillisec}-->
        <!-- | %X{AUDIT.respSentMillisec}-->
        <!-- | %X{AUDIT.applicationId}-->
        <!-- | %X{AUDIT.resourceId}-->
        <!-- | %X{AUDIT.scopes}-->
        <!-- | %X{AUDIT.sidebandName}-->
        <!-- | %appResponseHeader{a-header-name}-->
        <!-- | %clientResponseHeader{a-header-name}-->
        <!-- | %appRequestHeader{a-header-name}-->
        <!-- | %clientRequestHeader{a-header-name}-->
        <RollingFile name="SidebandAuditLog-File"
                     fileName="${sys:pa.home}/log/pingaccess_sideband_audit.log"
                     filePattern="${sys:pa.home}/log/pingaccess_sideband_audit.log.%i"
                     ignoreExceptions="false">
            <PatternLayout>
                <!-- Uncomment this if you want to use UTF-8 encoding instead of system's default encoding. -->
                <!--
                <charset>UTF-8</charset>
                -->
                <pattern>%d{ISO8601}| %X{exchangeId}| %X{AUDIT.trackingId}| %X{AUDIT.roundTripMS} ms| %X{AUDIT.resource}| %X{AUDIT.client}| %X{AUDIT.method}| %X{AUDIT.requestUri}| %X{AUDIT.responseCode}| %X{AUDIT.applicationName}| %X{AUDIT.resourceName}| %X{AUDIT.pathPrefix}| %X{AUDIT.sidebandName} %n</pattern>
            </PatternLayout>
            <Policies>
                <SizeBasedTriggeringPolicy size="100 MB" />
            </Policies>
            <DefaultRolloverStrategy max="4" />
        </RollingFile>

        <!-- Sideband Audit log : JDBC appender template for Oracle

        To enable:
          1) Uncomment the PingAccessJDBC, RollingFile and PingAccessFailover elements below
          2) Uncomment the reference to 'SidebandAuditLog-Database-Failover' for the 'sidebandaudit' Logger (in the 'Loggers' section)
          3) Ensure that the 'log4j2.db.properties' file is populated with valid values
          4) Ensure that the Oracle JDBC driver JAR file is in the /lib directory

        Note:
          In PingAccessFailover, the 'retryIntervalSeconds' attribute may be added to specify the number of seconds that must
          pass before retrying the primary JDBC appender.
        -->
        <!--
        <PingAccessJDBC name="SidebandAuditLog-Database" tableName="sideband_audit_log" ignoreExceptions="false" bufferSize="256">
            <ConnectionFactory class="com.pingidentity.pa.cli.logging.database.Log4j2OracleConnectionFactory" method="getSidebandAuditConnection" />
            <Column name="D_TIME" isEventTimestamp="true"/>
            <Column name="EXCHANGE_ID" pattern="%X{exchangeId}" />
            <Column name="TRACKING_ID" pattern="%X{AUDIT.trackingId}" />
            <Column name="ROUND_TRIP_MS" pattern="%X{AUDIT.roundTripMS}" />
            <Column name="REQUESTED_RESOURCE" pattern="%X{AUDIT.resource}" />
            <Column name="CLIENT" pattern="%X{AUDIT.client}" />
            <Column name="METHOD" pattern="%X{AUDIT.method}" />
            <Column name="REQUEST_URI" pattern="%X{AUDIT.requestUri}" isClob="true"/>
            <Column name="RESPONSE_CODE" pattern="%X{AUDIT.responseCode}" />
            <Column name="APPLICATION_NAME" pattern="%X{AUDIT.applicationName}" />
            <Column name="RESOURCE_NAME" pattern="%X{AUDIT.resourceName}" />
            <Column name="PATH_PREFIX" pattern="%X{AUDIT.pathPrefix}" />
            <Column name="SIDEBAND_NAME" pattern="%X{AUDIT.sidebandName}" />
        </PingAccessJDBC>
        <RollingFile name="SidebandAuditLog-Database-Failover-File"
                     fileName="${sys:pa.home}/log/pingaccess_sideband_audit_oracle_failover.log"
                     filePattern="${sys:pa.home}/log/pingaccess_sideband_audit_oracle_failover.%d{yyyy-MM-dd}.log"
                     ignoreExceptions="false">
            <PatternLayout>
                <pattern>%d{ISO8601}| %X{exchangeId}| %X{AUDIT.trackingId}| %X{AUDIT.roundTripMS} ms| %X{AUDIT.resource}| %X{AUDIT.client}| %X{AUDIT.method}| %X{AUDIT.requestUri}| %X{AUDIT.responseCode}| %X{AUDIT.applicationName}| %X{AUDIT.resourceName}| %X{AUDIT.pathPrefix}| %X{AUDIT.sidebandName} %n</pattern>
            </PatternLayout>
            <Policies>
                <TimeBasedTriggeringPolicy />
            </Policies>
        </RollingFile>
        <PingAccessFailover name="SidebandAuditLog-Database-Failover" primary="SidebandAuditLog-Database" error="File">
            <Failovers>
                <AppenderRef ref="SidebandAuditLog-Database-Failover-File"/>
            </Failovers>
        </PingAccessFailover>
        -->

        <!-- Sideband Audit log : JDBC appender template for Microsoft SQL Server

        To enable:
          1) Uncomment the PingAccessJDBC, RollingFile and PingAccessFailover elements below
          2) Uncomment the reference to 'SidebandAuditLog-SQLServer-Database-Failover' for the 'sidebandaudit' Logger (in the 'Loggers' section)
          3) Ensure that the 'log4j2.db.properties' file is populated with valid values
          4) Ensure that the SQL Server JDBC driver JAR file is in the /lib directory

        Note:
          In PingAccessFailover, the 'retryIntervalSeconds' attribute may be added to specify the number of seconds that must
          pass before retrying the primary JDBC appender.
        -->
        <!--
        <PingAccessJDBC name="SidebandAuditLog-SQLServer-Database" tableName="sideband_audit_log" ignoreExceptions="false" bufferSize="256">
            <ConnectionFactory class="com.pingidentity.pa.cli.logging.database.Log4j2SqlServerConnectionFactory" method="getSidebandAuditConnection" />
            <Column name="D_TIME" isEventTimestamp="true"/>
            <Column name="EXCHANGE_ID" pattern="%X{exchangeId}" />
            <Column name="TRACKING_ID" pattern="%X{AUDIT.trackingId}" />
            <Column name="ROUND_TRIP_MS" pattern="%X{AUDIT.roundTripMS}" />
            <Column name="REQUESTED_RESOURCE" pattern="%X{AUDIT.resource}" />
            <Column name="CLIENT" pattern="%X{AUDIT.client}" />
            <Column name="METHOD" pattern="%X{AUDIT.method}" />
            <Column name="REQUEST_URI" pattern="%X{AUDIT.requestUri}"/>
            <Column name="RESPONSE_CODE" pattern="%X{AUDIT.responseCode}" />
            <Column name="APPLICATION_NAME" pattern="%X{AUDIT.applicationName}" />
            <Column name="RESOURCE_NAME" pattern="%X{AUDIT.resourceName}" />
            <Column name="PATH_PREFIX" pattern="%X{AUDIT.pathPrefix}" />
            <Column name="SIDEBAND_NAME" pattern="%X{AUDIT.sidebandName}" />
        </PingAccessJDBC>
        <RollingFile name="SidebandAuditLog-SQLServer-Database-Failover-File"
                     fileName="${sys:pa.home}/log/pingaccess_sideband_audit_sqlserver_failover.log"
                     filePattern="${sys:pa.home}/log/pingaccess_sideband_audit_sqlserver_failover.%d{yyyy-MM-dd}.log"
                     ignoreExceptions="false">
            <PatternLayout>
                <pattern>%d{ISO8601}| %X{exchangeId}| %X{AUDIT.trackingId}| %X{AUDIT.roundTripMS} ms| %X{AUDIT.resource}| %X{AUDIT.client}| %X{AUDIT.method}| %X{AUDIT.requestUri}| %X{AUDIT.responseCode}| %X{AUDIT.applicationName}| %X{AUDIT.resourceName}| %X{AUDIT.pathPrefix}| %X{AUDIT.sidebandName} %n</pattern>
            </PatternLayout>
            <Policies>
                <TimeBasedTriggeringPolicy />
            </Policies>
        </RollingFile>
        <PingAccessFailover name="SidebandAuditLog-SQLServer-Database-Failover" primary="SidebandAuditLog-SQLServer-Database" error="File">
            <Failovers>
                <AppenderRef ref="SidebandAuditLog-SQLServer-Database-Failover-File"/>
            </Failovers>
        </PingAccessFailover>
        -->

        <!-- Sideband Audit log : JDBC appender template for PostgreSQL

        To enable:
          1) Uncomment the PingAccessJDBC, RollingFile and PingAccessFailover elements below
          2) Uncomment the reference to 'SidebandAuditLog-PostgreSQL' for the 'sidebandaudit' Logger (in the 'Loggers' section)
          3) Ensure that the 'log4j2.db.properties' file is populated with valid values
          4) Ensure that the PostgreSQL JDBC driver JAR file is in the /lib directory

        Note:
          In PingAccessFailover, the 'retryIntervalSeconds' attribute may be added to specify the number of seconds that must
          pass before retrying the primary JDBC appender.
        -->
        <!--
        <PingAccessJDBC name="SidebandAuditLog-PostgreSQL-Database" tableName="sideband_audit_log" ignoreExceptions="false" bufferSize="256">
            <ConnectionFactory class="com.pingidentity.pa.cli.logging.database.Log4j2PostgreSQLConnectionFactory" method="getSidebandAuditConnection" />
            <Column name="D_TIME" isEventTimestamp="true"/>
            <ColumnMapping name="EXCHANGE_ID" pattern="%X{exchangeId}" />
            <ColumnMapping name="TRACKING_ID" pattern="%X{AUDIT.trackingId}" />
            <ColumnMapping name="ROUND_TRIP_MS" pattern="%X{AUDIT.roundTripMS}" type="java.lang.Integer"/>
            <ColumnMapping name="REQUESTED_RESOURCE" pattern="%X{AUDIT.resource}" />
            <ColumnMapping name="CLIENT" pattern="%X{AUDIT.client}" />
            <ColumnMapping name="METHOD" pattern="%X{AUDIT.method}" />
            <ColumnMapping name="REQUEST_URI" pattern="%X{AUDIT.requestUri}"/>
            <ColumnMapping name="RESPONSE_CODE" pattern="%X{AUDIT.responseCode}" type="java.lang.Integer"/>
            <ColumnMapping name="APPLICATION_NAME" pattern="%X{AUDIT.applicationName}" />
            <ColumnMapping name="RESOURCE_NAME" pattern="%X{AUDIT.resourceName}" />
            <ColumnMapping name="PATH_PREFIX" pattern="%X{AUDIT.pathPrefix}" />
            <ColumnMapping name="SIDEBAND_NAME" pattern="%X{AUDIT.sidebandName}" />
        </PingAccessJDBC>
        <RollingFile name="SidebandAuditLog-PostgreSQL-Failover-File"
                     fileName="${sys:pa.home}/log/pingaccess_sideband_audit_postgresql_failover.log"
                     filePattern="${sys:pa.home}/log/pingaccess_sideband_audit_postgresql_failover.%d{yyyy-MM-dd}.log"
                     ignoreExceptions="false">
            <PatternLayout>
                <pattern>%d{ISO8601}| %X{exchangeId}| %X{AUDIT.trackingId}| %X{AUDIT.roundTripMS} ms| %X{AUDIT.resource}| %X{AUDIT.client}| %X{AUDIT.method}| %X{AUDIT.requestUri}| %X{AUDIT.responseCode}| %X{AUDIT.applicationName}| %X{AUDIT.resourceName}| %X{AUDIT.pathPrefix}| %X{AUDIT.sidebandName} %n</pattern>
            </PatternLayout>
            <Policies>
                <TimeBasedTriggeringPolicy />
            </Policies>
        </RollingFile>
        <PingAccessFailover name="SidebandAuditLog-PostgreSQL" primary="SidebandAuditLog-PostgreSQL-Database" error="File">
            <Failovers>
                <AppenderRef ref="SidebandAuditLog-PostgreSQL-Failover-File"/>
            </Failovers>
        </PingAccessFailover>
        -->

        <!-- Sideband Audit log for Splunk: A time/date based rolling appender

        NOTES:

        You must also uncomment the reference to this appender in 'sidebandaudit' Logger (in the 'Loggers' section)
        before it can be used.

        If you want to use UTF-8 encoding instead of system's default encoding add
        the following line to "PatternLayout"
        <charset>UTF-8</charset>
        -->
        <!--
        <RollingFile name="SidebandAudit2Splunk"
                     fileName="${sys:pa.home}/log/pingaccess_sideband_audit_splunk.log"
                     filePattern="${sys:pa.home}/log/pingaccess_sideband_audit_splunk.%d{yyyy-MM-dd}.log"
                     ignoreExceptions="false">
            <PatternLayout>
                <pattern>%d exchangeId="%X{exchangeId}" trackingId="%X{AUDIT.trackingId}" roundTripMS="%X{AUDIT.roundTripMS}" resource="%X{AUDIT.resource}" client="%X{AUDIT.client}" method="%X{AUDIT.method}" requestUri="%X{AUDIT.requestUri}" responseCode="%X{AUDIT.responseCode}" applicationName="%X{AUDIT.applicationName}" resourceName="%X{AUDIT.resourceName}" pathPrefix="%X{AUDIT.pathPrefix}" responder="%X{AUDIT.responder}" engineHostname="%X{AUDIT.host}" sidebandName="%X{AUDIT.sidebandName}" %n</pattern>
            </PatternLayout>
            <Policies>
                <TimeBasedTriggeringPolicy />
            </Policies>
        </RollingFile>
        -->

        <!-- Sideband Audit log : HAR format file

        To enable:
          1) Uncomment the SidebandAuditLog-HarFile element below
          2) Uncomment the reference to 'SidebandAuditLog-HarFile' for the 'sidebandaudit' Logger (in the 'Loggers' section)

        Notes:
          1) With the below settings, this will log all requests/responses captured by the Sideband API data with a 5XX response code that are received (client) and sent (app)
          2) Additional settings and details can be found in the PingAccess online documentation
          3) The app request is the request that has been modified by identity mappings and rules
          4) The app response is the initial response generated by PA when access is allowed; this may not be useful for debugging
        -->
        <!--
        <RollingFile name="SidebandAuditLog-HarFile"
                     fileName="${sys:pa.home}/log/pingaccess_sideband_audit_har.log"
                     filePattern="${sys:pa.home}/log/pingaccess_sideband_audit_har.%d{yyyy-MM-dd}.log"
                     ignoreExceptions="false">
            <StatusCodeRegExFilter regex="5.."/>
            <HarLogLayout clientBodySizeLimit="16384" appBodySizeLimit="16384">
                <KeyValuePair key="AUDIT.metadata" value="true"/>
                <KeyValuePair key="AUDIT.http-client" value="true"/>
                <KeyValuePair key="AUDIT.http-app" value="true"/>
            </HarLogLayout>
            <Policies>
                <TimeBasedTriggeringPolicy />
            </Policies>
        </RollingFile>
        -->
    </Appenders>
</Configuration>
