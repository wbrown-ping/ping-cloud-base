existingObjstoreSecret: "thanos-objstore-config"
query:
  enabled: true
  replicaLabel: [ "replica_cluster_name","prometheus_replica", "replica" ]
  resourcesPreset: "large"
queryFrontend:
  enabled: true
  resourcesPreset: "large"
  service:
    clusterIP: None
compactor:
  enabled: true
  retentionResolutionRaw: 2d
  retentionResolution5m: 10d
  retentionResolution1h: 5d
  resourcesPreset: 'large'
  persistence:
    enabled: false
  extraFlags:
    - "--enable-auto-gomemlimit"
    - "--hash-func=SHA256"
    - "--delete-delay=12h"
storegateway:
  enabled: true
  resourcesPreset: 'large'
  persistence:
    enabled: false
receive:
  enabled: true
  replicaCount: 3
  pdb:
    create: true
    minAvailable: 2
  podAntiAffinityPreset: "hard"
  topologySpreadConstraints:
    - labelSelector:
        matchLabels:
          app.kubernetes.io/instance: thanos
          app.kubernetes.io/component: receive
          app.kubernetes.io/name: thanos
      maxSkew: 1
      topologyKey: topology.kubernetes.io/zone
      whenUnsatisfiable: ScheduleAnyway
  config:
    - endpoints:
        - "thanos-receive-0.thanos-receive-headless.prometheus.svc.cluster.local:10901"
        - "thanos-receive-1.thanos-receive-headless.prometheus.svc.cluster.local:10901"
        - "thanos-receive-2.thanos-receive-headless.prometheus.svc.cluster.local:10901"
  extraFlags:
    - "--receive-forward-timeout=5m"
  replicationFactor: 3
  replicaLabel: replica
  podManagementPolicy: Parallel
  minReadySeconds: 120
  resourcesPreset: "xlarge"
  tsdbRetention: 8h
  persistence:
    storageClass: "prometheus-gp3"
  service:
    additionalHeadless: true
metrics:
  enabled: true
  serviceMonitor:
    enabled: true
    namespace: prometheus
    labels:
      prometheus: agent
    jobLabel: thanos