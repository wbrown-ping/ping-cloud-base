apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-agent-config
  namespace: prometheus
  annotations:
    argocd.argoproj.io/sync-options: Replace=true
  labels:
    name: prometheus-agent-config
data:
  prometheus.yml: |-
    global:
      # How frequently to scrape targets by default.
      scrape_interval: 15s
      # How long until a scrape request times out.
      scrape_timeout: 5s
      # How frequently to evaluate rules.
      evaluation_interval: 5s
      external_labels:
        k8s_cluster_name: ${CLUSTER_NAME}-${TENANT_NAME}-${REGION_NICK_NAME}
    remote_write:
    - url: 'http://prometheus:9090/api/v1/write'

    storage:
      tsdb:
        out_of_order_time_window: 1d

    scrape_configs:
    # Monitor prometheus itself
    - job_name: 'prometheus'
      scrape_interval: 10s
      static_configs:
      - targets: ['localhost:9090']
    # Monitor kube-state-metrics
    - job_name: 'kube-state-metrics'
      static_configs:
      - targets: ['kube-state-metrics.kube-system.svc.cluster.local:8080']

    # Discover and monitor PD instances
    - job_name: 'pd-statsd-exporter'
      kubernetes_sd_configs:
      - role: endpoints
      relabel_configs:
      - source_labels: [__meta_kubernetes_endpoint_port_name, __meta_kubernetes_service_name]
        action: keep
        regex: metrics;pingdirectory
      - source_labels: [__meta_kubernetes_pod_name]
        action: replace
        target_label: instance
      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: namespace

    # Discover and monitor PD JMX instances
    - job_name: 'pd-jmx-exporter'
      scrape_interval: 10s
      kubernetes_sd_configs:
      - role: endpoints
      relabel_configs:
      - source_labels: [__meta_kubernetes_endpoint_port_name, __meta_kubernetes_service_name]
        action: keep
        regex: jmx-metrics;pingdirectory
      - source_labels: [__meta_kubernetes_pod_name]
        action: replace
        target_label: instance
      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: namespace

    # Discover and monitor PD instances
    - job_name: 'prometheus-job-exporter'
      kubernetes_sd_configs:
      - role: endpoints
      relabel_configs:
      - source_labels: [__meta_kubernetes_endpoint_port_name, __meta_kubernetes_service_name]
        action: keep
        regex: metrics;prometheus-job-exporter
      - source_labels: [__meta_kubernetes_pod_name]
        action: replace
        target_label: instance
      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: namespace

    # Discover and monitor PF instances
    - job_name: 'pf-jmx-exporter'
      scrape_interval: 10s
      kubernetes_sd_configs:
      - role: endpoints
      relabel_configs:
      - source_labels: [__meta_kubernetes_endpoint_port_name, __meta_kubernetes_service_name]
        action: keep
        regex: metrics;pingfederate
      - source_labels: [__meta_kubernetes_pod_name]
        action: replace
        target_label: instance
      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: namespace

    # Discover and monitor PF instances
    - job_name: 'pf-heartbeat-exporter'
      scrape_interval: 10s
      metrics_path: /
      kubernetes_sd_configs:
      - role: endpoints
      relabel_configs:
      - source_labels: [__meta_kubernetes_endpoint_port_name, __meta_kubernetes_service_name]
        action: keep
        regex: pf-heartbeat;pingfederate
      - source_labels: [__meta_kubernetes_pod_name]
        action: replace
        target_label: instance
      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: namespace

    # Discover and monitor PA instances
    - job_name: 'pa-jmx-exporter'
      scrape_interval: 10s
      kubernetes_sd_configs:
      - role: endpoints
      relabel_configs:
      - source_labels: [__meta_kubernetes_endpoint_port_name, __meta_kubernetes_service_name]
        action: keep
        regex: metrics;pingaccess
      - source_labels: [__meta_kubernetes_pod_name]
        action: replace
        target_label: instance
      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: namespace

    # Discover and monitor PA instances
    - job_name: 'pa-heartbeat-exporter'
      scrape_interval: 10s
      metrics_path: /
      kubernetes_sd_configs:
      - role: endpoints
      relabel_configs:
      - source_labels: [__meta_kubernetes_endpoint_port_name, __meta_kubernetes_service_name]
        action: keep
        regex: pa-heartbeat;pingaccess
      - source_labels: [__meta_kubernetes_pod_name]
        action: replace
        target_label: instance
      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: namespace

    # Other k8s jobs to scrape - see https://devopscube.com/setup-prometheus-monitoring-on-kubernetes/
    - job_name: 'kubernetes-apiservers'
      kubernetes_sd_configs:
      - role: endpoints
      scheme: https
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      relabel_configs:
      - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
        action: keep
        regex: default;kubernetes;https
   
    - job_name: 'kubernetes-nodes'
      scheme: https
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      kubernetes_sd_configs:
      - role: node
      relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)
      - target_label: __address__
        replacement: kubernetes.default.svc:443
      - source_labels: [__meta_kubernetes_node_name]
        regex: (.+)
        target_label: __metrics_path__
        replacement: /api/v1/nodes/${1}/proxy/metrics
        
    - job_name: 'kubernetes-pods'
      kubernetes_sd_configs:
      - role: pod
      relabel_configs:
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
        action: keep
        regex: true
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
      - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
        action: replace
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
        target_label: __address__
      - action: labelmap
        regex: __meta_kubernetes_pod_label_(.+)
      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: kubernetes_namespace
      - source_labels: [__meta_kubernetes_pod_name]
        action: replace
        target_label: instance
    
    - job_name: 'kubernetes-cadvisor'
      scheme: https
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      kubernetes_sd_configs:
      - role: node
      relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)
      - target_label: __address__
        replacement: kubernetes.default.svc:443
      - source_labels: [__meta_kubernetes_node_name]
        regex: (.+)
        target_label: __metrics_path__
        replacement: /api/v1/nodes/${1}/proxy/metrics/cadvisor
    
    - job_name: 'kubernetes-service-endpoints'
      kubernetes_sd_configs:
      - role: endpoints
      tls_config:
        insecure_skip_verify: true
      relabel_configs:
      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
        action: keep
        regex: true
      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
        action: replace
        target_label: __scheme__
        regex: (https?)
      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
      - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
        action: replace
        target_label: __address__
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
      - action: labelmap
        regex: __meta_kubernetes_service_label_(.+)
      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: kubernetes_namespace
      - source_labels: [__meta_kubernetes_service_name]
        action: replace
        target_label: kubernetes_name
      - source_labels: [__meta_kubernetes_pod_name]
        action: replace
        target_label: instance
    
    - job_name: 'crunchy-postgres-exporter'
      kubernetes_sd_configs:
      - role: pod
      relabel_configs:
      - source_labels: [__meta_kubernetes_pod_label_postgres_operator_crunchydata_com_crunchy_postgres_exporter,__meta_kubernetes_pod_label_crunchy_postgres_exporter]
        action: keep
        regex: true
        separator: ""
      - source_labels: [__meta_kubernetes_pod_container_port_number]
        action: drop
        regex: 5432
      - source_labels: [__meta_kubernetes_pod_container_port_number]
        action: drop
        regex: 10000
      - source_labels: [__meta_kubernetes_pod_container_port_number]
        action: drop
        regex: 8009
      - source_labels: [__meta_kubernetes_pod_container_port_number]
        action: drop
        regex: 2022
      - source_labels: [__meta_kubernetes_pod_container_port_number]
        action: drop
        regex: ^$
      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: kubernetes_namespace
      - source_labels: [__meta_kubernetes_pod_name]
        target_label: pod
      - source_labels: [__meta_kubernetes_pod_label_postgres_operator_crunchydata_com_cluster,__meta_kubernetes_pod_label_pg_cluster]
        target_label: cluster
        separator: ""
        replacement: '$1'
      - source_labels: [__meta_kubernetes_namespace,cluster]
        target_label: pg_cluster
        separator: ":"
        replacement: '$1$2'
      - source_labels: [__meta_kubernetes_pod_ip]
        target_label: ip
        replacement: '$1'
      - source_labels: [__meta_kubernetes_pod_label_postgres_operator_crunchydata_com_instance,__meta_kubernetes_pod_label_deployment_name]
        target_label: deployment
        replacement: '$1'
        separator: ""
      - source_labels: [__meta_kubernetes_pod_label_postgres_operator_crunchydata_com_role]
        target_label: role
      - source_labels: [dbname]
        target_label: dbname
        replacement: '$1'
      - source_labels: [relname]
        target_label: relname
        replacement: '$1'
      - source_labels: [schemaname]
        target_label: schemaname
        replacement: '$1'
