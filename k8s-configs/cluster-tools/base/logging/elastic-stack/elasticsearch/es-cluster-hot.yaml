apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: es-cluster-hot
spec:
  serviceName: elasticsearch
  replicas: 3
  podManagementPolicy: Parallel
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: elasticsearch
  template:
    metadata:
      labels:
        app: elasticsearch
    spec:
      securityContext:
        fsGroup: 1000
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - elasticsearch
              topologyKey: kubernetes.io/hostname
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - elasticsearch
                topologyKey: topology.kubernetes.io/zone
      containers:
        - name: elasticsearch
          image: 'public.ecr.aws/r2h3l6e4/pingcloud-clustertools/elasticsearch/elasticsearch:8.1.3'
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            allowPrivilegeEscalation: false
          resources:
            limits:
              memory: 8Gi
              cpu: "2"
            requests:
              memory: 4Gi
              cpu: "1"
          ports:
            - containerPort: 9200
              name: rest
              protocol: TCP
            - containerPort: 9300
              name: inter-node
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            periodSeconds: 5
            tcpSocket:
              port: 9200
            timeoutSeconds: 3
          startupProbe:
            failureThreshold: 30
            initialDelaySeconds: 5
            periodSeconds: 10
            tcpSocket:
              port: 9200
            timeoutSeconds: 3
          env:
            - name: CONTAINER_NAME
              value: elasticsearch
            - name: node.name
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: cluster.name
              value: k8s-logs
            - name: network.host
              value: 0.0.0.0
            - name: discovery.seed_hosts
              value: elasticsearch
            - name: cluster.initial_master_nodes
              value: 'es-cluster-hot-0, es-cluster-hot-1, es-cluster-hot-2'
            - name: xpack.license.self_generated.type
              value: basic
            - name: xpack.security.enabled
              value: 'false'
            - name: node.roles
              value: >-
                master, data_hot, data_content, ingest, ml, transform,
                remote_cluster_client
            - name: ES_JAVA_OPTS
              value: "-Xms4g -Xmx4g"
          envFrom:
            - configMapRef:
                name: elk-environment-variables
          volumeMounts:
            - name: data
              mountPath: /usr/share/elasticsearch/data
              readOnly: false
            - name: log4j
              mountPath: /usr/share/elasticsearch/config/log4j2.properties
              subPath: log4j2.properties
      volumes:
        - name: log4j
          configMap:
            name: es-log4j-properties
  volumeClaimTemplates:
    - metadata:
        name: data
        labels:
          app: elasticsearch
      spec:
        accessModes:
          - ReadWriteOnce
        storageClassName: efs
        resources:
          requests:
            storage: 1Mi
