apiVersion: v1
kind: ConfigMap
metadata:
  name: pingaccess-periodic-csd-upload
data:
  backup-csd-data.sh: |-
    #!/bin/sh

    # Install kubectl
    if [[ "`uname -m`" == "aarch64" ]] ; then
        curl -sS https://storage.googleapis.com/kubernetes-release/release/"${KUBECTL_VERSION}"/bin/linux/arm64/kubectl \
        -o /tmp/kubectl
    else
        curl -sS https://storage.googleapis.com/kubernetes-release/release/"${KUBECTL_VERSION}"/bin/linux/amd64/kubectl \
        -o /tmp/kubectl
    fi

    chmod +x /tmp/kubectl

    REPLICAS=$(/tmp/kubectl get pods -l=role="${CSD_POD_ROLE}" -o name)

    CSD_FILES=
    for REPLICA in ${REPLICAS}; do
      SERVER=${REPLICA}
      SCRIPT="${HOOKS_DIR}"/82-upload-csd-s3.sh
      LOG_FILE=/tmp/upload.log

      echo "Uploading CSD on server ${SERVER}"
      /tmp/kubectl exec "${SERVER}" -c "${CSD_CONTAINER_NAME}" -- sh -c "test -x ${SCRIPT} && ${SCRIPT}" >"${LOG_FILE}"

      exit_code=${?}
      if test ${exit_code} -eq 0; then
        # Sending logs to STDOUT
        cat ${LOG_FILE}
        CSD_FILE=$(tail -1 "${LOG_FILE}")
        test -z "${CSD_FILES}" && CSD_FILES="${CSD_FILE}" || CSD_FILES="${CSD_FILES} ${CSD_FILE}"

        # Print the names of the uploaded files so callers know exactly what was uploaded
        echo "The following files were uploaded:"
        echo "${CSD_FILES}"
      else
        echo "The kubectl command attempting to invoke the script exited with: ${exit_code}"
        echo "This may be because: "
        echo "1) The ${SCRIPT} script is not currently available on the ${SERVER}.  This is expected if ${SERVER} is not running yet."
        echo "2) The ${SCRIPT} script exited with an error.  Please review the logs above to determine if this is the case."
        exit 1
      fi
    done
