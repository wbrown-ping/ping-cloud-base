apiVersion: v1
kind: ConfigMap
metadata:
  name:  pingdirectory-backup-script
data:
  backup.sh: |-
    #!/bin/sh

    delete_pvc() {
      kubectl delete pvc pingdirectory-backup -n ${PING_CLOUD_NAMESPACE} --grace-period=0 --force --wait=false
      kubectl patch pvc pingdirectory-backup -p '{"metadata":{"finalizers":null}}' -n ${PING_CLOUD_NAMESPACE}
    }

    # This guarantees that delete_pvc method will always run, even if the backup job exits due to an error
    trap "delete_pvc" EXIT
    
    # Set Hooks directory
    export HOOKS_DIR=/opt/staging/hooks
    SCRIPT="${HOOKS_DIR}/90-upload-backup-s3.sh"
    
    if test -x ${SCRIPT}; then
      # Execute backup script if user has the permissions
      echo "Running backup script for PingDirectory"
      ${SCRIPT}

      if test ${?} -ne 0; then
        echo "Backup script exited with code '${?}'"
        exit 1
      fi
    else
      echo "You don't have permissions to execute ${SCRIPT}. If you are overriding script be sure to give it execute permissions"
      exit 1
    fi