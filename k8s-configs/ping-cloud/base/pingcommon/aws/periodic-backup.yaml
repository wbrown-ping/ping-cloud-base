apiVersion: v1
kind: ConfigMap
metadata:
  name: pingcommon-backup
data:
  backup-archive-data.sh: |-
    #!/bin/sh

    # Install kubectl
    if [[ "`uname -m`" == "aarch64" ]] ; then
        curl -sS https://storage.googleapis.com/kubernetes-release/release/"${KUBECTL_VERSION}"/bin/linux/arm64/kubectl \
        -o /tmp/kubectl
    else
        curl -sS https://storage.googleapis.com/kubernetes-release/release/"${KUBECTL_VERSION}"/bin/linux/amd64/kubectl \
        -o /tmp/kubectl
    fi

    chmod +x /tmp/kubectl

    UPLOAD_FILES=
    SERVER="${K8S_STATEFUL_SET_NAME}-0"
    SCRIPT="${HOOKS_DIR}"/90-upload-backup-s3.sh
    LOG_FILE=/tmp/upload.log

    echo "Uploading ${K8S_STATEFUL_SET_NAME} backup data on server ${SERVER}"
    /tmp/kubectl exec "${SERVER}" -c "${K8S_STATEFUL_SET_NAME}" -- sh -c \
            "test -x ${SCRIPT} && \
            ${SCRIPT}"> "${LOG_FILE}"

    exit_code=${?}
    if test ${exit_code} -eq 0; then
      # Sending logs to STDOUT
      cat ${LOG_FILE}
      UPLOAD_FILE=$(tail -1 "${LOG_FILE}")
      test -z "${UPLOAD_FILES}" && UPLOAD_FILES="${UPLOAD_FILE}" || UPLOAD_FILES="${UPLOAD_FILES} ${UPLOAD_FILE}"
    else
      echo "The kubectl command attempting to invoke the script exited with '${exit_code}'"
      exit 1
    fi
    
    # Print the names of the uploaded files so callers know exactly what was uploaded
    echo "The following files were uploaded:"
    echo "${UPLOAD_FILES}"
